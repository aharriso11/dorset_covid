plot.subtitle = element_markdown(hjust = 0, vjust = 0, size = 11),
plot.caption = element_text(size = 10))
covid_vaccs_percentage_plot
# set working directory
setwd("~/Documents/GitHub/dorset_covid")
# Install the pacman package to call all the other packages
if (!require("pacman")) install.packages("pacman")
# Use pacman to install (if req) and load required packages
pacman::p_load(
ggplot2,
tidyr,
reshape,
lubridate
)
covid_vaccs_dor <- read.csv(url("https://api.coronavirus.data.gov.uk/v2/data?areaType=ltla&areaCode=E06000059&metric=newPeopleVaccinatedFirstDoseByVaccinationDate&metric=newPeopleVaccinatedSecondDoseByVaccinationDate&metric=newPeopleVaccinatedThirdInjectionByVaccinationDate&format=csv"))
covid_vaccs_bcp <- read.csv(url("https://api.coronavirus.data.gov.uk/v2/data?areaType=ltla&areaCode=E06000058&metric=newPeopleVaccinatedFirstDoseByVaccinationDate&metric=newPeopleVaccinatedSecondDoseByVaccinationDate&metric=newPeopleVaccinatedThirdInjectionByVaccinationDate&format=csv"))
# merge datasets into one
# 1 - place datasets into a single list
vaccs_list <- list(covid_vaccs_bcp,covid_vaccs_dor)
# 2 - merge the datasets in the list into vaccs_combined
vaccs_combined <- merge_recurse(vaccs_list)
# keep only the columns we need, and rename the vacc event columns
vaccs_combined <- subset(vaccs_combined, select = c("date", "areaName", "newPeopleVaccinatedFirstDoseByVaccinationDate", "newPeopleVaccinatedSecondDoseByVaccinationDate", "newPeopleVaccinatedThirdInjectionByVaccinationDate"))
names(vaccs_combined)[names(vaccs_combined) == "newPeopleVaccinatedFirstDoseByVaccinationDate"] <- "First"
names(vaccs_combined)[names(vaccs_combined) == "newPeopleVaccinatedSecondDoseByVaccinationDate"] <- "Second"
names(vaccs_combined)[names(vaccs_combined) == "newPeopleVaccinatedThirdInjectionByVaccinationDate"] <- "Third or booster"
# define the date format
vaccs_combined$date = as.Date(vaccs_combined$date, "%Y-%m-%d")
# restrict to last 9 months
vaccs_combined <- subset(vaccs_combined, date > today() - months(6))
# convert wide data into long
vaccs_long <- gather(vaccs_combined, event, total, First:last_col())
# create plot and geom
covid_vaccs_plot <- ggplot() +
geom_bar(data = vaccs_long, aes(x = date, y = total, fill = event), stat="identity", position = "stack", width = 0.7) +
scale_fill_manual(name = "Vaccination", values = c("First" = "paleturquoise3", "Second" = "turquoise4", "Third or booster" = "#00413d"), labels = c("First", "Second", "Third or booster")) +
facet_grid( ~ areaName) +
scale_x_date(date_labels = "%b %y", date_breaks = "1 month") +
ggtitle("Dorset covid vaccinations by local authority") +
labs(caption = paste("Data from UK Health Security Agency / https://coronavirus.data.gov.uk. Plotted", Sys.time(), sep = " "), subtitle = "Daily numbers of new people that have received a COVID-19 vaccination") +
xlab("Date") +
ylab("Vaccinations") +
theme_bw() +
theme(
plot.title = element_text(size = 20, family = "Helvetica", face = "bold"),
plot.subtitle = element_markdown(hjust = 0, vjust = 0, size = 11),
plot.caption = element_text(size = 10))
covid_vaccs_plot
# save to daily file
ggsave("output/daily_dorset_vaccinations.png", width = 16.6, height = 8.65, units = "in")
source('~/Documents/GitHub/dorset_covid/scripts/covid dorset vaccs percentage.R', echo=TRUE)
# Use pacman to install (if req) and load required packages
pacman::p_load(
httr,
readods,
tidyr,
ggplot2,
dplyr,
zoo,
data.table,
scales,
glue,
ggtext,
ggthemes
)
# Use pacman to install (if req) and load required packages
pacman::p_load(
httr,
readODS,
tidyr,
ggplot2,
dplyr,
zoo,
data.table,
scales,
glue,
ggtext,
ggthemes
)
# set working directory
setwd("~/Documents/GitHub/dorset_covid")
# Install the pacman package to call all the other packages
if (!require("pacman")) install.packages("pacman")
# Use pacman to install (if req) and load required packages
pacman::p_load(
httr,
readODS,
tidyr,
ggplot2,
dplyr,
zoo,
data.table,
scales,
glue,
ggtext,
ggthemes
)
sheet_path <- "https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/1038371/variants-of-concern-technical-briefing-30-data-england-3-december.ods"
GET(sheetl_path, write_disk("variants-of-concern-technical-briefing.ods", overwrite = TRUE))
GET(sheet_path, write_disk("variants-of-concern-technical-briefing.ods", overwrite = TRUE))
# Import raw data from Excel
covid_variant_data <- read_ods("variants-of-concern-technical-briefing.ods", sheet = "Fig2", skip = 5)
sheet_path <- "https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/1038371/variants-of-concern-technical-briefing-30-data-england-3-december.ods"
GET(sheet_path, write_disk("variants-of-concern-technical-briefing.ods", overwrite = TRUE))
# Import raw data from Excel
covid_variant_data <- read_ods("variants-of-concern-technical-briefing.ods", sheet = "Fig2", skip = 2)
View(covid_variant_data)
# set the date format
covid_variant_data$Week = as.Date(covid_variant_data$Week, "%d/%m/%Y")
str(covid_variant_data)
covid_variant_data_w <- gather(covid_variant_data, variant, case_prevelance, "Alpha":last_col())
View(covid_variant_data_w)
rm(covid_variant_data_w)
covid_variant_data <- gather(covid_variant_data, variant, case_prevelance, "Alpha":last_col())
covid_variant_plot <- ggplot() +
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "dodge")
covid_variant_plot
covid_variant_plot <- ggplot() +
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack")
covid_variant_plot
covid_variant_plot <- ggplot() +
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
scale_y_continuous(breaks = c(20, 40, 60, 80, 100), labels = scales::percent_format(scale = 1), limits = c(0,100))
covid_variant_plot
covid_variant_plot <- ggplot() +
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
scale_y_continuous(breaks = c(0.2, 0.4, 0.6, 0.8, 1.0), labels = scales::percent_format(scale = 1), limits = c(0,1))
covid_variant_plot
covid_variant_plot <- ggplot() +
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
scale_y_continuous(breaks = c(0.2, 0.4, 0.6, 0.8, 1.0), labels = scales::percent_format(scale = 1), limits = c(0,100))
covid_variant_plot
covid_variant_plot <- ggplot() +
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack")
covid_variant_plot
covid_variant_plot <- ggplot() +
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
scale_fill_manual(name = "Variant", values = as.vector(warmcool(19)))
# Use pacman to install (if req) and load required packages
pacman::p_load(
httr,
readODS,
tidyr,
ggplot2,
dplyr,
zoo,
data.table,
scales,
glue,
ggtext,
ggthemes,
pals
)
covid_variant_plot <- ggplot() +
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
scale_fill_manual(name = "Variant", values = as.vector(warmcool(19)))
covid_variant_plot
covid_variant_plot <- ggplot() +
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
scale_fill_manual(name = "Variant", values = as.vector(alphabet2(19)))
covid_variant_plot
covid_variant_plot <- ggplot() +
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
scale_fill_manual(name = "Variant", values = as.vector(stepped(19)))
covid_variant_plot
covid_variant_plot <- ggplot() +
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
scale_fill_manual(name = "Variant", values = as.vector(stepped2(19)))
covid_variant_plot
covid_variant_plot <- ggplot() +
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
scale_fill_manual(name = "Variant", values = as.vector(cols25(19)))
covid_variant_plot
covid_variant_plot <- ggplot() +
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
scale_fill_manual(name = "Variant", values = as.vector(alphabet(19)))
covid_variant_plot
covid_variant_plot <- ggplot() +
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
scale_fill_manual(name = "Variant", values = as.vector(alphabet2(19)))
covid_variant_plot
covid_variant_plot <- ggplot() +
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
#  scale_fill_manual(name = "Variant", values = as.vector(alphabet2(19)))
covid_variant_plot
covid_variant_plot <- ggplot() +
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack")
covid_variant_plot
covid_cases_age_stack_plot <- ggplot() +
geom_bar(data = covid_cases_age_percents, aes(x = date, y = per, fill = age), position = "fill", stat = "identity") +
#  geom_text(data = covid_cases_age_percents, aes(x = date, y = per, label = per), size = 4) +
xlab("Date") +
ylab("New cases") +
scale_fill_manual(name = "Age group", values = as.vector(glasbey(19))) +
scale_x_date(date_labels = "%d %B", date_breaks = "1 day") +
scale_y_continuous(labels = scales::percent_format(scale = 100)) +
labs(color = "Age bands") +
ggtitle("Dorset - new covid cases by age group distribution") +
labs(caption = paste("Data from UK Health Security Agency / https://coronavirus.data.gov.uk. Plotted", Sys.time(), sep = " ")) +
facet_grid( ~ areaName) +
theme_bw()
covid_cases_age_stack_plot
scale_fill_manual(name = "Variant", values = as.vector(glasbey(19)))
covid_variant_plot
scale_fill_manual(name = "Variant", values = as.vector(kelly(19)))
covid_variant_plot
scale_fill_manual(name = "Variant", values = as.vector(alphabet(19)))
covid_variant_plot
covid_variant_plot <- ggplot() +
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
scale_fill_manual(name = "Variant", values = as.vector(alphabet(19)))
covid_variant_plot
covid_variant_plot <- ggplot() +
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
scale_fill_manual(name = "Variant", values = as.vector(alphabet2(19)))
covid_variant_plot
covid_variant_plot <- ggplot() +
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
scale_fill_manual(name = "Variant", values = as.vector(glasbey(19)))
covid_variant_plot
covid_variant_plot <- ggplot() +
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
scale_fill_manual(name = "Variant", values = as.vector(kelly(19)))
covid_variant_plot
covid_variant_plot <- ggplot() +
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
scale_fill_manual(name = "Variant", values = as.vector(polychrome(19)))
covid_variant_plot
covid_variant_plot <- ggplot() +
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
scale_fill_manual(name = "Variant", values = as.vector(stepped3(19)))
covid_variant_plot
covid_variant_plot <- ggplot() +
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
scale_fill_manual(name = "Variant", values = as.vector(ocean.phase(19)))
covid_variant_plot
covid_variant_plot <- ggplot() +
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
scale_fill_manual(name = "Variant", values = as.vector(ocean.phase(19))) +
scale_x_date(date_labels = "%b %y", date_breaks = "1 month") +
xlab("Month") +
ylab("Case prevelance percentage")
covid_variant_plot
covid_variant_plot <- ggplot() +
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
scale_fill_manual(name = "Variant", values = as.vector(tableau20(19))) +
scale_x_date(date_labels = "%b %y", date_breaks = "1 month") +
xlab("Month") +
ylab("Case prevelance percentage")
covid_variant_plot
covid_variant_plot <- ggplot() +
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
scale_fill_manual(name = "Variant", values = as.vector(tableau20(19))) +
scale_x_date(date_labels = "%b %y", date_breaks = "1 month") +
xlab("Month") +
ylab("Case prevelance percentage") +
ggtitle("Covid variant prevalence in England") +
labs(caption = paste("Data from UK Health Security Agency / https://coronavirus.data.gov.uk. Plotted", Sys.time(), sep = " "), subtitle = paste0("Variant prevalence for all England available sequenced cases from 1 February 2021 as of 30 November 2021")) +
covid_variant_plot
covid_variant_plot <- ggplot() +
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
scale_fill_manual(name = "Variant", values = as.vector(tableau20(19))) +
scale_x_date(date_labels = "%b %y", date_breaks = "1 month") +
xlab("Month") +
ylab("Case prevelance percentage") +
ggtitle("Covid variant prevalence in England") +
labs(caption = paste("Data from UK Health Security Agency / https://coronavirus.data.gov.uk. Plotted", Sys.time(), sep = " "), subtitle = paste0("Variant prevalence for all England available sequenced cases from 1 February 2021 as of 30 November 2021"))
covid_variant_plot
covid_variant_plot <- ggplot() +
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
scale_fill_manual(name = "Variant", values = as.vector(tableau20(19))) +
scale_x_date(date_labels = "%b %y", date_breaks = "1 month") +
xlab("Month") +
ylab("Case prevelance percentage") +
ggtitle("Covid variant prevalence in England") +
labs(caption = paste("Data from UK Health Security Agency / https://coronavirus.data.gov.uk. Plotted", Sys.time(), sep = " "), subtitle = paste0("Variant prevalence for all England available sequenced cases from 1 February 2021 as of 30 November 2021")) +
theme_base() +
theme(
plot.subtitle = element_markdown(hjust = 0, vjust = 0, size = 12),
plot.caption = element_text(size = 11))
covid_variant_plot
covid_variant_plot <- ggplot() +
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
scale_fill_manual(name = "Variant", values = as.vector(tableau20(19))) +
scale_x_date(date_labels = "%b %y", date_breaks = "1 month") +
xlab("Month") +
ylab("Case prevelance percentage") +
ggtitle("Covid variant prevalence in England") +
labs(caption = paste("Data from UK Health Security Agency technical briefing. Plotted", Sys.time(), sep = " "), subtitle = paste0("Variant prevalence for all England available sequenced cases from 1 February 2021 as of 30 November 2021")) +
theme_base() +
theme(
plot.subtitle = element_markdown(hjust = 0, vjust = 0, size = 12),
plot.caption = element_text(size = 11))
covid_variant_plot
# create plot and geom
covid_variant_plot <- ggplot() +
# plot data in a stacked format
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
# scale settings
scale_fill_manual(name = "Variant", values = as.vector(tableau20(19))) +
scale_x_date(date_labels = "%b %y", date_breaks = "1 month") +
# axis settings
xlab("Month") +
ylab("Case prevelance percentage") +
# titles
ggtitle("Covid variant prevalence in England") +
labs(caption = paste("Data from UK Health Security Agency technical briefing. Plotted", Sys.time(), sep = " "), subtitle = paste0("Variant prevalence for all England available sequenced cases from 1 February 2021 as of 30 November 2021")) +
# set theme
theme_bw() +
theme(
plot.subtitle = element_markdown(hjust = 0, vjust = 0, size = 12),
plot.caption = element_text(size = 11))
covid_variant_plot
# set plot and geom
covid_cases_plot <- ggplot() +
# plot cases
geom_point(data = covid_cases_subset, aes(x = date, y = cases_07da), shape = 1, colour = "red", size = 2) +
# plot trend line
geom_smooth(data = subset(covid_cases_csv, covid_cases_csv$date >= less_seven_days), aes(x = date, y = cases_07da), method = "lm", colour = "black", size=0.5, fullrange=FALSE, se=FALSE) +
# set x and y axis
scale_y_continuous(trans = 'log10', breaks = c(1000,2000,5000,10000,20000,50000), position = "right") +
scale_x_date(date_labels = "%b %y", date_breaks = "1 month") +
xlab("Date") +
ylab("Cases") +
# set title, subtitle and caption
ggtitle("England covid cases - 7 day average by specimen date (log scale)") +
labs(caption = paste0("Data from UK Health Security Agency / https://coronavirus.data.gov.uk. Plotted ", Sys.time(), sep = " "), subtitle = paste0("Daily numbers of new cases (people who have had at least one positive COVID-19 test result). Data are shown by the date the sample was taken from the person being tested.")) +
# set theme
theme_bw() +
theme(
plot.title = element_text(size = 20, family = "Helvetica", face = "bold"),
plot.subtitle = element_markdown(hjust = 0, vjust = 0, size = 11),
plot.caption = element_text(size = 10))
# create plot and geom
covid_variant_plot <- ggplot() +
# plot data in a stacked format
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
# scale settings
scale_fill_manual(name = "Variant", values = as.vector(tableau20(19))) +
scale_x_date(date_labels = "%b %y", date_breaks = "1 month") +
# axis settings
xlab("Month") +
ylab("Case prevelance percentage") +
# titles
ggtitle("Covid variant prevalence in England") +
labs(caption = paste("Data from UK Health Security Agency technical briefing. Plotted", Sys.time(), sep = " "), subtitle = paste0("Variant prevalence for all England available sequenced cases from 1 February 2021 as of 30 November 2021")) +
# set theme
theme_bw() +
theme(
plot.title = element_text(size = 20, family = "Helvetica", face = "bold"),
plot.subtitle = element_markdown(hjust = 0, vjust = 0, size = 11),
plot.caption = element_text(size = 10))
covid_variant_plot
# create plot and geom
covid_variant_plot <- ggplot() +
# plot data in a stacked format
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
# scale settings
scale_fill_manual(name = "Variant", values = as.vector(tableau20(19))) +
scale_x_date(date_labels = "%b %y", date_breaks = "1 month") +
# axis settings
xlab("Month") +
ylab("Case prevelance percentage") +
# titles
ggtitle("Covid variant prevalence in England") +
labs(caption = paste("Data from UK Health Security Agency technical briefing. Plotted", Sys.time(), sep = " "), subtitle = paste0("Variant prevalence for all England available sequenced cases from 1 February 2021 as of 30 November 2021")) +
# set theme
theme_base() +
theme(
plot.title = element_text(size = 20, family = "Helvetica", face = "bold"),
plot.subtitle = element_markdown(hjust = 0, vjust = 0, size = 11),
plot.caption = element_text(size = 10))
covid_variant_plot
# set working directory
setwd("~/Documents/GitHub/dorset_covid")
# Install the pacman package to call all the other packages
if (!require("pacman")) install.packages("pacman")
# Use pacman to install (if req) and load required packages
pacman::p_load(
httr,
readODS,
tidyr,
ggplot2,
dplyr,
zoo,
data.table,
scales,
glue,
ggtext,
ggthemes,
pals
)
sheet_path <- "https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/1038371/variants-of-concern-technical-briefing-30-data-england-3-december.ods"
GET(sheet_path, write_disk("variants-of-concern-technical-briefing.ods", overwrite = TRUE))
# Import raw data from Excel
covid_variant_data <- read_ods("variants-of-concern-technical-briefing.ods", sheet = "Fig2", skip = 2)
# set the date format
covid_variant_data$Week = as.Date(covid_variant_data$Week, "%d/%m/%Y")
# convert wide data to long
covid_variant_data <- gather(covid_variant_data, variant, case_prevelance, "Alpha":last_col())
# create plot and geom
covid_variant_plot <- ggplot() +
# plot data in a stacked format
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
# scale settings
scale_fill_manual(name = "Variant", values = as.vector(tableau20(19))) +
scale_x_date(date_labels = "%b %y", date_breaks = "1 month") +
# axis settings
xlab("Month") +
ylab("Case prevelance percentage") +
# titles
ggtitle("Covid variant prevalence in England") +
labs(caption = paste("Data from UK Health Security Agency technical briefing. Plotted", Sys.time(), sep = " "), subtitle = paste0("Variant prevalence for all England available sequenced cases from 1 February 2021 as of 30 November 2021")) +
# set theme
theme_base() +
theme(
plot.title = element_text(size = 20, family = "Helvetica", face = "bold"),
plot.subtitle = element_markdown(hjust = 0, vjust = 0, size = 11),
plot.caption = element_text(size = 10))
covid_variant_plot
# save to daily file
ggsave("output/england_variants.png", width = 16.6, height = 8.65, units = "in")
# create plot and geom
covid_variant_plot <- ggplot() +
# plot data in a stacked format
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
# scale settings
scale_fill_manual(name = "Variant", values = as.vector(tableau20(19))) +
scale_x_date(date_labels = "%b %y", date_breaks = "1 month") +
# axis settings
xlab("Month") +
ylab("Case prevelance percentage") +
# titles
ggtitle("Covid variant prevalence in England") +
labs(caption = paste("Data from UK Health Security Agency technical briefing 30 (gateway number GOV-10547). Plotted", Sys.time(), sep = " "), subtitle = paste0("Variant prevalence for all England available sequenced cases from 1 February 2021 as of 30 November 2021")) +
# set theme
theme_base() +
theme(
plot.title = element_text(size = 20, family = "Helvetica", face = "bold"),
plot.subtitle = element_markdown(hjust = 0, vjust = 0, size = 11),
plot.caption = element_text(size = 10))
covid_variant_plot
# save to daily file
ggsave("output/england_variants.png", width = 16.6, height = 8.65, units = "in")
# set plot caption
plot_caption <- "Data from UK Health Security Agency technical briefing 30 (gateway number GOV-10547)."
# set working directory
setwd("~/Documents/GitHub/dorset_covid")
# set technical briefing spreadsheet path
sheet_path <- "https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/1038371/variants-of-concern-technical-briefing-30-data-england-3-december.ods"
# set plot title
plot_subtitle <- "Variant prevalence for all England available sequenced cases from 1 February 2021 as of 30 November 2021"
# set plot caption
plot_caption <- "Data from UK Health Security Agency technical briefing 30 (gateway number GOV-10547)."
# Install the pacman package to call all the other packages
if (!require("pacman")) install.packages("pacman")
# Use pacman to install (if req) and load required packages
pacman::p_load(
httr,
readODS,
tidyr,
ggplot2,
dplyr,
zoo,
data.table,
scales,
glue,
ggtext,
ggthemes,
pals
)
GET(sheet_path, write_disk("variants-of-concern-technical-briefing.ods", overwrite = TRUE))
# Import raw data from Excel
covid_variant_data <- read_ods("variants-of-concern-technical-briefing.ods", sheet = "Fig2", skip = 2)
# set the date format
covid_variant_data$Week = as.Date(covid_variant_data$Week, "%d/%m/%Y")
# convert wide data to long
covid_variant_data <- gather(covid_variant_data, variant, case_prevelance, "Alpha":last_col())
# create plot and geom
covid_variant_plot <- ggplot() +
# plot data in a stacked format
geom_area(data = covid_variant_data, aes(x = Week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
# scale settings
scale_fill_manual(name = "Variant", values = as.vector(tableau20(19))) +
scale_x_date(date_labels = "%b %y", date_breaks = "1 month") +
# axis settings
xlab("Month") +
ylab("Case prevelance percentage") +
# titles
ggtitle("Covid variant prevalence in England") +
labs(caption = paste0(plot_caption," Plotted", Sys.time(), sep = " "), subtitle = paste0(plot_subtitle)) +
# set theme
theme_base() +
theme(
plot.title = element_text(size = 20, family = "Helvetica", face = "bold"),
plot.subtitle = element_markdown(hjust = 0, vjust = 0, size = 11),
plot.caption = element_text(size = 10))
covid_variant_plot
# save to daily file
ggsave("output/england_variants.png", width = 16.6, height = 8.65, units = "in")
# encode url for ONS open geography portal - local authority district to region lookup (April 2021)
# url needs to be encoded so we can use it with fromJSON
region_json_url <- URLencode('https://services1.arcgis.com/ESMARspQHYMw9BZ9/arcgis/rest/services/LAD21_RGN21_EN_LU/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json')
# get LTLA to region lookup data
region_json_data <- jsonlite::fromJSON(region_json_url)
# extract the lookup table into a dataframe
region_data <- data.table(region_json_data$features)
View(region_data)
# create new dataframe to filter south west (E12000009) LTLAs only
region_data_sw <- region_data %>%
filter(attributes.RGN21CD=="E12000009")
View(region_data_sw)
