scale_x_date(date_labels = "%B %Y", date_breaks = "1 month") +
scale_y_continuous(position = "right") +
# labels
xlab("Date") +
ylab("New cases 7 day average") +
# right hand side labels
geom_text(data = plot_labels_right, aes(x = labels_right_x, y = labels_right_y, label = labels_right_text, group = NULL, hjust = "left"), colour = plot_labels_right$labels_right_colour, fontface = "bold", family = "Officina Sans ITC Book", size = 4, nudge_x = 1, angle = 45) +
geom_text(data = subset_top5, aes(x = date, y = utla_cases_07da, label = areaName, group = NULL, hjust = "left"), colour = "lightblue3", fontface = "bold", family = "Officina Sans ITC Book", size = 3, nudge_x = 1, angle = 45) +
# set title
ggtitle("New covid cases - Dorset comparison with England upper tier local authorities") +
labs(caption = paste("Data from UK Health Security Agency / https://coronavirus.data.gov.uk. Plotted", Sys.time(), sep = " ")) +
# set theme
theme_economist(base_family="Officina Sans ITC Book") +
theme(axis.line.x = element_line(size=.5, colour = "black"),
legend.position="bottom",
legend.direction="horizontal",
legend.title = element_blank(),
plot.title=element_text(family="Officina Sans ITC Book"),
text=element_text(family="Officina Sans ITC Book"))
covid_cases_utlas_plot
# save to daily file
ggsave("daily_cases_utlas.png", width = 16.6, height = 8.65, units = "in")
SET COMMON VARIABLES ----
# set working directory
setwd("~/Documents/GitHub/dorset_covid")
# Install the pacman package to call all the other packages
if (!require("pacman")) install.packages("pacman")
# Use pacman to install (if req) and load required packages
pacman::p_load(
ggplot2,
dplyr,
zoo,
lubridate,
ggthemes
)
covid_owid_csv <- read.csv(url("https://covid.ourworldindata.org/data/owid-covid-data.csv"))
covid_owid_csv$date = as.Date(covid_owid_csv$date, "%Y-%m-%d")
covid_owid_csv$location = as.factor(covid_owid_csv$location)
owid_cases <- covid_owid_csv %>%
filter(iso_code=="GBR" | iso_code=="AUT" | iso_code=="NLD" | iso_code=="HUN" | iso_code=="DEU" | iso_code=="BEL")
owid_cases <- subset(owid_cases, date > today() - months(3), select = c("iso_code", "location", "date", "new_cases_smoothed_per_million"))
plot(owid_cases$date, owid_cases$new_cases_smoothed_per_million, type = "o",
col = as.factor(owid_cases$iso_code))
owid_cases_plot <- ggplot() +
geom_line(data = owid_cases, aes(x = date, y = new_cases_smoothed_per_million, col = location), size = 0.5, method = "loess") +
scale_y_continuous(position = "right") +
scale_x_date(date_labels = "%d %B", date_breaks = "2 weeks") +
xlab("Date") +
ylab("New cases per million") +
ggtitle("Covid cases per million - UK comparison") +
labs(caption = paste("Data from Our World In Data / https://ourworldindata.org/coronavirus. Plotted", Sys.time(), sep = " "), colour = "Country") +
theme_bw()
owid_cases_plot
SET COMMON VARIABLES ----
# set working directory
setwd("~/Documents/GitHub/dorset_covid")
# Install the pacman package to call all the other packages
if (!require("pacman")) install.packages("pacman")
# Use pacman to install (if req) and load required packages
pacman::p_load(
ggplot2,
dplyr,
zoo,
lubridate,
ggthemes
)
covid_owid_csv <- read.csv(url("https://covid.ourworldindata.org/data/owid-covid-data.csv"))
covid_owid_csv$date = as.Date(covid_owid_csv$date, "%Y-%m-%d")
covid_owid_csv$location = as.factor(covid_owid_csv$location)
owid_countries <- covid_owid_csv %>%
filter(iso_code=="GBR" | iso_code=="AUT" | iso_code=="NLD" | iso_code=="HUN" | iso_code=="DEU" | iso_code=="BEL")
owid_cases <- subset(owid_countries, date > today() - months(3), select = c("iso_code", "location", "date", "new_cases_smoothed_per_million"))
plot(owid_cases$date, owid_cases$new_cases_smoothed_per_million, type = "o",
col = as.factor(owid_cases$iso_code))
owid_cases_plot <- ggplot() +
geom_line(data = owid_cases, aes(x = date, y = new_cases_smoothed_per_million, col = location), size = 0.5, method = "loess") +
scale_y_continuous(position = "right") +
scale_x_date(date_labels = "%d %B", date_breaks = "2 weeks") +
xlab("Date") +
ylab("New cases per million") +
ggtitle("Covid cases per million - UK comparison") +
labs(caption = paste("Data from Our World In Data / https://ourworldindata.org/coronavirus. Plotted", Sys.time(), sep = " "), colour = "Country") +
theme_bw()
owid_cases_plot
View(owid_countries)
vt <- read.csv(url("https://github.com/owid/covid-19-data/blob/master/public/data/vaccinations/vaccinations.csv"))
View(vt)
rm(vt)
vt <- read.csv(url("https://github.com/owid/covid-19-data/raw/master/public/data/vaccinations/vaccinations.csv"))
View(vt)
covid_owid_vaccs_csv <- read.csv(url("https://github.com/owid/covid-19-data/raw/master/public/data/vaccinations/vaccinations.csv"))
covid_owid_vaccs_csv$date = as.Date(covid_owid_vaccs_csv$date, "%Y-%m-%d")
owid_countries <- covid_owid_vaccs_csv %>%
filter(iso_code=="GBR" | iso_code=="AUT" | iso_code=="NLD" | iso_code=="HUN" | iso_code=="DEU" | iso_code=="BEL")
View(owid_countries)
owid_vaccs <- subset(owid_countries, date > today() - months(3), select = c("iso_code", "location", "date", "daily_vaccinations"))
owid_vaccs_plot <- ggplot() +
geom_line(data = owid_vaccs, aes(x = date, y = daily_vaccinations, col = location), size = 0.5, method = "loess") +
scale_y_continuous(position = "right") +
scale_x_date(date_labels = "%d %B", date_breaks = "2 weeks") +
xlab("Date") +
ylab("Daily vaccinations") +
ggtitle("Covid daily vaccinations - UK comparison") +
labs(caption = paste("Data from Our World In Data / https://ourworldindata.org/coronavirus. Plotted", Sys.time(), sep = " "), colour = "Country") +
theme_bw()
owid_vaccs_plot
View(owid_vaccs)
View(owid_countries)
owid_vaccs <- subset(owid_countries, date > today() - months(3), select = c("iso_code", "location", "date", "daily_vaccinations_per_million"))
owid_vaccs_plot <- ggplot() +
geom_line(data = owid_vaccs, aes(x = date, y = daily_vaccinations_per_million, col = location), size = 0.5, method = "loess") +
scale_y_continuous(position = "right") +
scale_x_date(date_labels = "%d %B", date_breaks = "2 weeks") +
xlab("Date") +
ylab("Daily vaccinations per million") +
ggtitle("Covid daily vaccinations per million - UK comparison") +
labs(caption = paste("Data from Our World In Data / https://ourworldindata.org/coronavirus. Plotted", Sys.time(), sep = " "), colour = "Country") +
theme_bw()
owid_vaccs_plot
covid_owid_csv <- read.csv(url("https://covid.ourworldindata.org/data/owid-covid-data.csv"))
covid_owid_csv$date = as.Date(covid_owid_csv$date, "%Y-%m-%d")
covid_owid_csv$location = as.factor(covid_owid_csv$location)
owid_countries <- covid_owid_csv %>%
filter(iso_code=="GBR" | iso_code=="AUT" | iso_code=="NLD" | iso_code=="HUN" | iso_code=="DEU" | iso_code=="BEL")
owid_cases <- subset(owid_countries, date > today() - months(3), select = c("iso_code", "location", "date", "new_cases_smoothed_per_million"))
owid_cases_plot <- ggplot() +
geom_line(data = owid_cases, aes(x = date, y = new_cases_smoothed_per_million, col = location), size = 0.5, method = "loess") +
scale_y_continuous(position = "right") +
scale_x_date(date_labels = "%d %B", date_breaks = "2 weeks") +
xlab("Date") +
ylab("New cases per million") +
ggtitle("Covid cases per million - UK comparison") +
labs(caption = paste("Data from Our World In Data / https://ourworldindata.org/coronavirus. Plotted", Sys.time(), sep = " "), colour = "Country") +
theme_bw()
owid_cases_plot
covid_owid_vaccs_csv <- read.csv(url("https://github.com/owid/covid-19-data/raw/master/public/data/vaccinations/vaccinations.csv"))
covid_owid_vaccs_csv$date = as.Date(covid_owid_vaccs_csv$date, "%Y-%m-%d")
owid_countries <- covid_owid_vaccs_csv %>%
filter(iso_code=="GBR" | iso_code=="AUT" | iso_code=="NLD" | iso_code=="HUN" | iso_code=="DEU" | iso_code=="BEL")
owid_vaccs <- subset(owid_countries, date > today() - months(3), select = c("iso_code", "location", "date", "daily_vaccinations_per_million"))
owid_vaccs_plot <- ggplot() +
geom_line(data = owid_vaccs, aes(x = date, y = daily_vaccinations_per_million, col = location), size = 0.5, method = "loess") +
scale_y_continuous(position = "right") +
scale_x_date(date_labels = "%d %B", date_breaks = "2 weeks") +
xlab("Date") +
ylab("Daily vaccinations per million") +
ggtitle("Covid daily vaccinations per million - UK comparison") +
labs(caption = paste("Data from Our World In Data / https://ourworldindata.org/coronavirus. Plotted", Sys.time(), sep = " "), colour = "Country") +
theme_bw()
owid_vaccs_plot
owid_cases_plot <- ggplot() +
geom_line(data = owid_cases, aes(x = date, y = new_cases_smoothed_per_million, col = location), size = 0.5, method = "loess") +
scale_y_continuous(position = "right") +
scale_x_date(date_labels = "%d %B", date_breaks = "2 weeks") +
xlab("Date") +
ylab("New cases per million") +
ggtitle("Covid cases per million - UK comparison") +
labs(caption = paste("Data from Our World In Data / https://ourworldindata.org/coronavirus. Plotted", Sys.time(), sep = " "), colour = "Country") +
theme_bw()
covid_owid_csv <- read.csv(url("https://covid.ourworldindata.org/data/owid-covid-data.csv"))
covid_owid_csv$date = as.Date(covid_owid_csv$date, "%Y-%m-%d")
covid_owid_csv$location = as.factor(covid_owid_csv$location)
owid_countries <- covid_owid_csv %>%
filter(iso_code=="GBR" | iso_code=="AUT" | iso_code=="NLD" | iso_code=="HUN" | iso_code=="DEU" | iso_code=="BEL")
owid_cases <- subset(owid_countries, date > today() - months(3), select = c("iso_code", "location", "date", "new_cases_smoothed_per_million"))
owid_cases_plot <- ggplot() +
geom_line(data = owid_cases, aes(x = date, y = new_cases_smoothed_per_million, col = location), size = 0.5, method = "loess") +
scale_y_continuous(position = "right") +
scale_x_date(date_labels = "%d %B", date_breaks = "2 weeks") +
xlab("Date") +
ylab("New cases per million") +
ggtitle("Covid cases per million - UK comparison") +
labs(caption = paste("Data from Our World In Data / https://ourworldindata.org/coronavirus. Plotted", Sys.time(), sep = " "), colour = "Country") +
theme_bw()
owid_cases_plot
ggsave(plot = owid_cases_plot, width = 16.6, height = 8.65, units = "in", filename = "intl_cases.png")
# set working directory
setwd("~/Documents/GitHub/dorset_covid")
# Install the pacman package to call all the other packages
if (!require("pacman")) install.packages("pacman")
# Use pacman to install (if req) and load required packages
pacman::p_load(
ggplot2,
dplyr,
zoo,
lubridate,
ggthemes
)
covid_owid_vaccs_csv <- read.csv(url("https://github.com/owid/covid-19-data/raw/master/public/data/vaccinations/vaccinations.csv"))
covid_owid_vaccs_csv$date = as.Date(covid_owid_vaccs_csv$date, "%Y-%m-%d")
owid_countries <- covid_owid_vaccs_csv %>%
filter(iso_code=="GBR" | iso_code=="AUT" | iso_code=="NLD" | iso_code=="HUN" | iso_code=="DEU" | iso_code=="BEL")
owid_vaccs <- subset(owid_countries, date > today() - months(3), select = c("iso_code", "location", "date", "daily_vaccinations_per_million"))
owid_vaccs_plot <- ggplot() +
geom_line(data = owid_vaccs, aes(x = date, y = daily_vaccinations_per_million, col = location), size = 0.5, method = "loess") +
scale_y_continuous(position = "right") +
scale_x_date(date_labels = "%d %B", date_breaks = "2 weeks") +
xlab("Date") +
ylab("Daily vaccinations per million") +
ggtitle("Covid daily vaccinations per million - UK comparison") +
labs(caption = paste("Data from Our World In Data / https://ourworldindata.org/coronavirus. Plotted", Sys.time(), sep = " "), colour = "Country") +
theme_bw()
owid_vaccs_plot
ggsave(plot = owid_cases_plot, width = 16.6, height = 8.65, units = "in", filename = "intl_vaccs.png")
ggsave(plot = owid_vaccs_plot, width = 16.6, height = 8.65, units = "in", filename = "intl_vaccs.png")
# set working directory
setwd("~/Documents/R/")
# Install the pacman package to call all the other packages
if (!require("pacman")) install.packages("pacman")
# Use pacman to install (if req) and load required packages
pacman::p_load(
ggplot2,
dplyr,
zoo,
reshape2,
lubridate,
plotly,
data.table,
rjson,
ggthemes,
extrafont,
tidyr,
ggalt,
directlabels
)
run <- read.csv(file("mground.csv"))
# define the date format
run$Datesum = as.Date(run$Datesum, "%d/%m/%Y")
run$Timesec = as.duration(run$Timesec)
qplot(Datesum, Timesec, data = run)
qplot(Datesum, Timesec, data = run, geom = "histogram")
run <- subset(run, select = c(Datesum, Timesec))
run2 <- run %>%
group_by_if(is.duration() %>% Negate) %>%
summarize_all(sum)
run2 <- run %>%
group_by(Timesec) %>%
summarize_all(sum)
run2 <- run %>%
group_by(Datesum) %>%
summarize_all(sum)
View(run2)
qplot(Datesum, Timesec, data = run2, geom = "histogram")
qplot(Datesum, Timesec, data = run2)
qplot(Datesum, Timesec, data = run2, geom = "fill")
qplot(Datesum, Timesec, data = run2, geom = "histogram")
qplot(Datesum, Timesec, data = run2, geom = "bar")
qplot(Datesum, Timesec, data = run2, geom = "bar", stat = "identity")
run_plot <- ggplot() +
geom_bar(data = run2, aes(x = Datesum, y = Timesec), stat = "identity", colour = "blue3") +
scale_x_date(date_labels = "%B %Y", date_breaks = "1 month")
run_plot
run_plot <- ggplot() +
geom_bar(data = run2, aes(x = Datesum, y = Timesec), stat = "identity", colour = "blue3") +
scale_x_date(date_labels = "%B %Y", date_breaks = "1 month") +
xlab("Date") +
ylab("Seconds per day") +
labs(title="Discharges from Martinstown pumping station in 2020",
subtitle="Groundwater discharge measured in seconds per day",
caption=paste0("Data from Wessex Water"))
run_plot
run_plot <- ggplot() +
geom_bar(data = run2, aes(x = Datesum, y = Timesec), stat = "identity", colour = "blue3") +
scale_x_date(date_labels = "%B %Y", date_breaks = "1 month") +
xlab("Date") +
ylab("Seconds per day") +
labs(title="Groundwater discharge from Martinstown pumping station in 2020",
subtitle="Measured in seconds per day",
caption=paste0("Data from Wessex Water"))
run_plot
run_plot <- ggplot() +
geom_bar(data = run2, aes(x = Datesum, y = Timesec), stat = "identity", colour = "blue3") +
scale_x_date(date_labels = "%B %Y", date_breaks = "1 month") +
xlab("Date") +
ylab("Seconds per day") +
labs(title="Groundwater discharge from Martinstown pumping station in 2020",
subtitle="Measured in seconds per day",
caption=paste0("Data from Wessex Water")) +
theme_base()
run_plot
run_plot <- ggplot() +
geom_bar(data = run2, aes(x = Datesum, y = Timesec), stat = "identity", colour = "blue3") +
scale_x_date(date_labels = "%B", date_breaks = "1 month") +
xlab("Date") +
ylab("Seconds per day") +
labs(title="Groundwater discharge from Martinstown pumping station in 2020",
subtitle="Measured in seconds per day",
caption=paste0("Data from Wessex Water")) +
theme_base()
run_plot
run_plot <- ggplot() +
geom_bar(data = run2, aes(x = Datesum, y = Timesec), stat = "identity", colour = "steelblue") +
scale_x_date(date_labels = "%B", date_breaks = "1 month") +
xlab("Date") +
ylab("Seconds per day") +
labs(title="Groundwater discharge from Martinstown pumping station in 2020",
subtitle="Measured in seconds per day",
caption=paste0("Data from Wessex Water")) +
theme_base()
run_plot
run_plot <- ggplot() +
geom_bar(data = run2, aes(x = Datesum, y = Timesec), stat = "identity", colour = "grey1") +
scale_x_date(date_labels = "%B", date_breaks = "1 month") +
xlab("Date") +
ylab("Seconds per day") +
labs(title="Groundwater discharge from Martinstown pumping station in 2020",
subtitle="Measured in seconds per day",
caption=paste0("Data from Wessex Water")) +
theme_base()
run_plot
run_plot <- ggplot() +
geom_bar(data = run2, aes(x = Datesum, y = Timesec), stat = "identity", colour = "grey66") +
scale_x_date(date_labels = "%B", date_breaks = "1 month") +
xlab("Date") +
ylab("Seconds per day") +
labs(title="Groundwater discharge from Martinstown pumping station in 2020",
subtitle="Measured in seconds per day",
caption=paste0("Data from Wessex Water")) +
theme_base()
run_plot
run_plot <- ggplot() +
geom_bar(data = run2, aes(x = Datesum, y = Timesec), stat = "identity", colour = "steelblue") +
scale_x_date(date_labels = "%B", date_breaks = "1 month") +
xlab("Date") +
ylab("Seconds per day") +
labs(title="Groundwater discharge from Martinstown pumping station in 2020",
subtitle="Measured in seconds per day",
caption=paste0("Data from Wessex Water")) +
theme_bw()
run_plot
run_plot <- ggplot() +
geom_bar(data = run2, aes(x = Datesum, y = Timesec), stat = "identity", colour = "steelblue") +
scale_x_date(date_labels = "%B", date_breaks = "1 month") +
xlab("Date") +
ylab("Seconds per day") +
labs(title="Groundwater discharge from Martinstown pumping station in 2020",
subtitle="Measured in seconds per day",
caption=paste0("Data from Wessex Water")) +
theme_classic()
run_plot
run_plot <- ggplot() +
geom_bar(data = run2, aes(x = Datesum, y = Timesec), stat = "identity", colour = "steelblue") +
scale_x_date(date_labels = "%B", date_breaks = "1 month") +
xlab("Date") +
ylab("Seconds per day") +
labs(title="Groundwater discharge from Martinstown pumping station in 2020",
subtitle="Measured in seconds per day",
caption=paste0("Data from Wessex Water")) +
theme_clean()
run_plot
run_plot <- ggplot() +
geom_bar(data = run2, aes(x = Datesum, y = Timesec), stat = "identity", colour = "steelblue") +
scale_x_date(date_labels = "%B", date_breaks = "1 month") +
xlab("Date") +
ylab("Seconds per day") +
labs(title="Groundwater discharge from Martinstown pumping station in 2020",
subtitle="Measured in seconds per day",
caption=paste0("Data from Wessex Water")) +
theme_few()
run_plot
run_plot <- ggplot() +
geom_bar(data = run2, aes(x = Datesum, y = Timesec), stat = "identity", colour = "steelblue") +
scale_x_date(date_labels = "%B", date_breaks = "1 month") +
xlab("Date") +
ylab("Seconds per day") +
labs(title="Groundwater discharge from Martinstown pumping station in 2020",
subtitle="Measured in seconds per day",
caption=paste0("Data from Wessex Water")) +
theme_fivethirtyeight()
run_plot
run_plot <- ggplot() +
geom_bar(data = run2, aes(x = Datesum, y = Timesec), stat = "identity", colour = "steelblue") +
scale_x_date(date_labels = "%B", date_breaks = "1 month") +
xlab("Date") +
ylab("Seconds per day") +
labs(title="Groundwater discharge from Martinstown pumping station in 2020",
subtitle="Measured in seconds per day",
caption=paste0("Data from Wessex Water")) +
theme_hc()
run_plot
run_plot <- ggplot() +
geom_bar(data = run2, aes(x = Datesum, y = Timesec), stat = "identity", colour = "steelblue") +
scale_x_date(date_labels = "%B", date_breaks = "1 month") +
xlab("Date") +
ylab("Seconds per day") +
labs(title="Groundwater discharge from Martinstown pumping station in 2020",
subtitle="Measured in seconds per day",
caption=paste0("Data from Wessex Water")) +
theme_igray()
run_plot
run_plot <- ggplot() +
geom_bar(data = run2, aes(x = Datesum, y = Timesec), stat = "identity", colour = "steelblue") +
scale_x_date(date_labels = "%B", date_breaks = "1 month") +
xlab("Date") +
ylab("Seconds per day") +
labs(title="Groundwater discharge from Martinstown pumping station in 2020",
subtitle="Measured in seconds per day",
caption=paste0("Data from Wessex Water")) +
theme_minimal()
run_plot
run_plot <- ggplot() +
geom_bar(data = run2, aes(x = Datesum, y = Timesec), stat = "identity", colour = "steelblue") +
scale_x_date(date_labels = "%B", date_breaks = "1 month") +
xlab("Date") +
ylab("Seconds per day") +
labs(title="Groundwater discharge from Martinstown pumping station in 2020",
subtitle="Measured in seconds per day",
caption=paste0("Data from Wessex Water")) +
theme_tufte()
run_plot
run_plot <- ggplot() +
geom_bar(data = run2, aes(x = Datesum, y = Timesec), stat = "identity", colour = "steelblue") +
scale_x_date(date_labels = "%B", date_breaks = "1 month") +
xlab("Date") +
ylab("Seconds per day") +
labs(title="Groundwater discharge from Martinstown pumping station in 2020",
subtitle="Measured in seconds per day",
caption=paste0("Data from Wessex Water")) +
theme_wsj()
run_plot
run_plot <- ggplot() +
geom_bar(data = run2, aes(x = Datesum, y = Timesec), stat = "identity", colour = "steelblue") +
scale_x_date(date_labels = "%B", date_breaks = "1 month") +
xlab("Date") +
ylab("Seconds per day") +
labs(title="Groundwater discharge from Martinstown pumping station in 2020",
subtitle="Measured in seconds per day",
caption=paste0("Data from Wessex Water")) +
theme_base()
run_plot
run_plot <- ggplot() +
geom_bar(data = run2, aes(x = Datesum, y = Timesec), stat = "identity", colour = "steelblue") +
scale_x_date(date_labels = "%B", date_breaks = "1 month") +
xlab("Date") +
ylab("Seconds per day") +
labs(title="Groundwater discharge from Martinstown pumping station in 2020",
subtitle="Measured in seconds per day",
caption=paste0("Data from Wessex Water")) +
theme_calc()
run_plot
run_plot <- ggplot() +
geom_bar(data = run2, aes(x = Datesum, y = Timesec), stat = "identity", colour = "steelblue") +
scale_x_date(date_labels = "%B", date_breaks = "1 month") +
xlab("Date") +
ylab("Seconds per day") +
labs(title="Groundwater discharge from Martinstown pumping station in 2020",
subtitle="Measured in seconds per day",
caption=paste0("Data from Wessex Water")) +
theme_clean()
run_plot
run_plot <- ggplot() +
geom_bar(data = run2, aes(x = Datesum, y = Timesec), stat = "identity", colour = "steelblue") +
scale_x_date(date_labels = "%B", date_breaks = "1 month") +
xlab("Date") +
ylab("Seconds per day") +
labs(title="Groundwater discharge from Martinstown pumping station in 2020",
subtitle="Measured in seconds per day",
caption=paste0("Data from Wessex Water")) +
theme_fivethirtyeight()
run_plot
run_plot <- ggplot() +
geom_bar(data = run2, aes(x = Datesum, y = Timesec), stat = "identity", colour = "steelblue") +
scale_x_date(date_labels = "%B", date_breaks = "1 month") +
xlab("Date") +
ylab("Seconds per day") +
labs(title="Groundwater discharge from Martinstown pumping station in 2020",
subtitle="Measured in seconds from date of activation",
caption=paste0("Data from Wessex Water")) +
theme_fivethirtyeight()
run_plot
run_plot <- ggplot() +
geom_bar(data = run2, aes(x = Datesum, y = Timesec), stat = "identity", colour = "steelblue") +
scale_x_date(date_labels = "%B", date_breaks = "1 month") +
xlab("Date") +
ylab("Seconds per day") +
labs(title="Groundwater discharge from Martinstown pumping station in 2020",
subtitle="Measured in seconds from date of activation",
caption=paste0("Data from Wessex Water")) +
theme_fivethirtyeight()
run_plot
ggsave("martinstown.png", width = 16.6, height = 8.65, units = "in")
run_plot <- ggplot() +
geom_bar(data = run2, aes(x = Datesum, y = Timesec), stat = "identity", colour = "steelblue", fill = "steelblue") +
scale_x_date(date_labels = "%B", date_breaks = "1 month") +
xlab("Date") +
ylab("Seconds per day") +
labs(title="Groundwater discharge from Martinstown pumping station in 2020",
subtitle="Measured in seconds from date of activation",
caption=paste0("Data from Wessex Water")) +
theme_fivethirtyeight()
run_plot
run_plot <- ggplot() +
geom_bar(data = run2, aes(x = Datesum, y = Timesec), stat = "identity", colour = "blue3", fill = "blue3") +
scale_x_date(date_labels = "%B", date_breaks = "1 month") +
xlab("Date") +
ylab("Seconds per day") +
labs(title="Groundwater discharge from Martinstown pumping station in 2020",
subtitle="Measured in seconds from date of activation",
caption=paste0("Data from Wessex Water")) +
theme_fivethirtyeight()
run_plot
run_plot <- ggplot() +
geom_bar(data = run2, aes(x = Datesum, y = Timesec), stat = "identity", colour = "blue4", fill = "blue4") +
scale_x_date(date_labels = "%B", date_breaks = "1 month") +
xlab("Date") +
ylab("Seconds per day") +
labs(title="Groundwater discharge from Martinstown pumping station in 2020",
subtitle="Measured in seconds from date of activation",
caption=paste0("Data from Wessex Water")) +
theme_fivethirtyeight()
run_plot
source('~/Documents/GitHub/dorset_covid/covid cases sw.R', echo=TRUE)
