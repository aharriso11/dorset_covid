warnings()
head(la_rev_data_socialcare_long)
class(la_rev_data_socialcare_long$total)
la_rev_data_socialcare_long$total <- as.numeric(as.character(la_rev_data_socialcare_long$total))
class(la_rev_data_socialcare_long$total)
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare_long, aes(x = reorder(la_name, total), y = total, fill = la_type), stat = "identity") +
facet_grid( ~ spend_type) +
theme_bw()
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare_long, aes(x = reorder(la_name, total), y = total, fill = la_type), stat = "identity") +
scale_y_continuous(breaks = c(100000, 200000, 300000, 400000, 500000)) +
facet_grid( ~ spend_type) +
theme_bw()
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare_long, aes(x = reorder(la_name, total), y = total, fill = la_type), stat = "identity") +
scale_y_continuous(breaks = c(100000, 200000, 300000, 400000, 500000), labels = scales::dollar()) +
facet_grid( ~ spend_type) +
theme_bw()
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare_long, aes(x = reorder(la_name, total), y = total, fill = la_type), stat = "identity") +
scale_y_continuous(breaks = c(100000, 200000, 300000, 400000, 500000), labels = comma) +
facet_grid( ~ spend_type) +
theme_bw()
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare_long, aes(x = reorder(la_name, total), y = total, fill = la_type), stat = "identity") +
scale_y_continuous(breaks = c(100000, 200000, 300000, 400000, 500000), labels = scales::comma()) +
facet_grid( ~ spend_type) +
theme_bw()
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare_long, aes(x = reorder(la_name, total), y = total, fill = la_type), stat = "identity") +
options(scipen = 999) +
facet_grid( ~ spend_type) +
theme_bw()
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare_long, aes(x = reorder(la_name, total), y = total, fill = la_type), stat = "identity") +
options(scipen = 999) +
facet_grid( ~ spend_type) +
theme_bw()
rlang::last_error()
rlang::last_trace()
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare_long, aes(x = reorder(la_name, total), y = total, fill = la_type), stat = "identity") +
#  options(scipen = 999) +
facet_grid( ~ spend_type) +
theme_bw()
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare_long, aes(x = reorder(la_name, total), y = total, fill = la_type), stat = "identity") +
options(scipen = 999) +
facet_grid( ~ spend_type) +
theme_bw()
# Use pacman to install (if req) and load required packages
pacman::p_load(
readxl,
tidyr,
ggplot2,
dplyr,
zoo,
data.table,
scales
)
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare_long, aes(x = reorder(la_name, total), y = total, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend", labels = comma) +
facet_grid( ~ spend_type) +
theme_bw()
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare_long, aes(x = reorder(la_name, total), y = total, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
facet_grid( ~ spend_type) +
theme_bw()
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
#  facet_grid( ~ spend_type) +
theme_bw()
socialcare_plot
la_rev_data_socialcare$adult <- as.numeric(as.character(la_rev_data_socialcare$adult))
la_rev_data_socialcare$children <- as.numeric(as.character(la_rev_data_socialcare$children))
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
#  facet_grid( ~ spend_type) +
theme_bw()
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_x_continuous(name = "Local authority") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
#  facet_grid( ~ spend_type) +
theme_bw()
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
#  facet_grid( ~ spend_type) +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
theme_bw()
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
#  facet_grid( ~ spend_type) +
theme(axis.text.x=element_text(angle=90,hjust=1)) +
theme_bw()
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority")
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority") +
#  facet_grid( ~ spend_type) +
theme(axis.text.x=element_text(angle=90,hjust=1)) +
theme_bw()
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority") +
#  facet_grid( ~ spend_type) +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
theme_bw()
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority") +
#  facet_grid( ~ spend_type) +
theme_bw() +
theme(axis.text.x=element_text(angle=45,hjust=1))
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority") +
#  facet_grid( ~ spend_type) +
theme_bw() +
theme(axis.text.x=element_text(angle=45,hjust=1,size = 2))
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority") +
#  facet_grid( ~ spend_type) +
theme_bw() +
theme(axis.text.x=element_text(angle=45,hjust=1,size = 3))
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority") +
#  facet_grid( ~ spend_type) +
theme_bw() +
theme(axis.text.x=element_text(angle=45,hjust=1,size = 4))
socialcare_plot
theme(axis.text.x=element_text(angle=45,hjust=1,size = 5)
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority") +
#  facet_grid( ~ spend_type) +
theme_bw() +
theme(axis.text.x=element_text(angle=45,hjust=1,size=4))
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority") +
#  facet_grid( ~ spend_type) +
theme_bw() +
theme(axis.text.x=element_text(angle=45,hjust=1,size=5))
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority") +
#  facet_grid( ~ spend_type) +
theme_bw() +
theme(axis.text.x=element_text(angle=90,hjust=1,size=5))
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority") +
#  facet_grid( ~ spend_type) +
theme_bw() +
theme(axis.text.x=element_text(angle=60,hjust=1,size=5))
socialcare_plot
highlight = function(x, pat, color="black", family="") {
ifelse(grepl(pat, x), glue("<b style='font-family:{family}; color:{color}'>{x}</b>"), x)
}
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority", labels= function(x) highlight(x, "Dorset UA|Bournemouth, Christchurch and Poole UA", "red")) +
theme_bw() +
theme(axis.text.x=element_text(angle=60,hjust=1,size=5))
socialcare_plot
# Use pacman to install (if req) and load required packages
pacman::p_load(
readxl,
tidyr,
ggplot2,
dplyr,
zoo,
data.table,
scales,
glue
)
highlight = function(x, pat, color="black", family="") {
ifelse(grepl(pat, x), glue("<b style='font-family:{family}; color:{color}'>{x}</b>"), x)
}
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority", labels= function(x) highlight(x, "Dorset UA|Bournemouth, Christchurch and Poole UA", "red")) +
theme_bw() +
theme(axis.text.x=element_text(angle=60,hjust=1,size=5))
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority", labels= function(x) highlight(x, "Dorset UA|Bournemouth, Christchurch and Poole UA", "red")) +
theme_bw() +
theme(axis.text.x=element_html(angle=60,hjust=1,size=5))
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority", labels= function(x) highlight(x, "Dorset UA|Bournemouth, Christchurch and Poole UA", "red")) +
theme_bw() +
theme(axis.text.x=element_markdown(angle=60,hjust=1,size=5))
# Use pacman to install (if req) and load required packages
pacman::p_load(
readxl,
tidyr,
ggplot2,
dplyr,
zoo,
data.table,
scales,
glue,
ggtext
)
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority", labels= function(x) highlight(x, "Dorset UA|Bournemouth, Christchurch and Poole UA", "red")) +
theme_bw() +
theme(axis.text.x=element_markdown(angle=60,hjust=1,size=5))
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority", labels= function(x) highlight(x, "Dorset UA|Bournemouth, Christchurch and Poole UA", "red4")) +
theme_bw() +
theme(axis.text.x=element_markdown(angle=60,hjust=1,size=5))
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority", labels= function(x) highlight(x, "Dorset UA|Bournemouth, Christchurch and Poole UA", "red3")) +
theme_bw() +
theme(axis.text.x=element_markdown(angle=60,hjust=1,size=5))
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority", labels= function(x) highlight(x, "Dorset UA|Bournemouth, Christchurch and Poole UA", "red3")) +
scale_fill_discrete(name = "LA type", labels = c("London borough", "Metropolitan district", "County", "Unitary authority")) +
theme_bw() +
theme(axis.text.x=element_markdown(angle=60,hjust=1,size=5))
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority", labels= function(x) highlight(x, "Dorset UA|Bournemouth, Christchurch and Poole UA", "red3")) +
scale_fill_discrete(name = "LA type", labels = c("London borough", "Metropolitan district", "County council", "Unitary authority")) +
theme_bw() +
theme(axis.text.x=element_markdown(angle=60,hjust=1,size=5))
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority", labels= function(x) highlight(x, "Dorset UA|Bournemouth, Christchurch and Poole UA", "red3")) +
scale_fill_discrete(name = "LA type", labels = c("London borough", "Metropolitan district", "County council", "Unitary authority")) +
ggtitle("Local authority adult social services spend 2020-21") +
theme_bw() +
theme(axis.text.x=element_markdown(angle=60,hjust=1,size=5))
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority", labels= function(x) highlight(x, "Dorset UA|Bournemouth, Christchurch and Poole UA", "red3")) +
scale_fill_discrete(name = "LA type", labels = c("London borough", "Metropolitan district", "County council", "Unitary authority")) +
ggtitle("Local authority adult social services spend 2020-21", subtitle = "Data from https://www.gov.uk/government/collections/local-authority-revenue-expenditure-and-financing") +
theme_bw() +
theme(axis.text.x=element_markdown(angle=60,hjust=1,size=5))
socialcare_plot
# SET COMMON VARIABLES ----
# set working directory
setwd("~/Documents/GitHub/dorset_covid")
# LOAD LIBRARIES ----
# install the UKHSA covid-19 R SDK
# remotes::install_github("publichealthengland/coronavirus-dashboard-api-R-sdk")
# library(ukcovid19)
# Install the pacman package to call all the other packages
if (!require("pacman")) install.packages("pacman")
# Use pacman to install (if req) and load required packages
pacman::p_load(
httr,
readxl,
readODS,
tidyverse,
zoo,
data.table,
scales,
glue,
ggtext,
ggthemes,
pals,
utils,
reshape,
lubridate,
rvest,
stringr,
openxlsx,
ggalt,
janitor
)
# OBTAIN DATA ----
df_eng_cumul <- read.csv(file = "./devel/ons_eng_cumulative.csv")
# define the date format
df_eng_cumul$Date = as.Date(df_eng_cumul$Date, "%Y-%m-%d")
df_eng_daily_number <- df_eng_cumul
# convert wide data into long
df_long <- gather(df_eng_daily_number, event, total, -c(Date))
st1 <- paste("The modelled number of people in England testing positive for covid-19, from the ONS covid-19 infection survey.<br>
The lighter shaded area shows the <b>confidence interval</b> within which the actual number of infections might fall.<br>
This dataset was produced on <b>", date_publication, "</b> and covers dates between ", date_first, " and ", date_last, ". The next update will be on <b>", date_next, "</b>.", sep = "")
st1 <- paste("Testing")
# plot and geoms
df_plot_eng <- ggplot() +
# Plot confidence interval as a ribbon
geom_ribbon(data = df_eng_daily_number, aes(x = Date, ymin = ymin, ymax = ymax), fill = "thistle1") +
# plot the modelled number and upper and lower intervals as xps lines
geom_xspline(data = subset(df_long, event=="modnum"), aes(x = Date, y = total), stat = "xspline", size = 1.25, colour = "red4") +
geom_xspline(data = subset(df_long, event=="ymin"), aes(x = Date, y = total), stat = "xspline", colour = "thistle3") +
geom_xspline(data = subset(df_long, event=="ymax"), aes(x = Date, y = total), stat = "xspline", colour = "thistle3") +
# scale settings
scale_x_date(date_labels = "%d %b", date_breaks = "2 weeks") +
scale_y_continuous(labels = unit_format(unit = "M", scale = 1e-6, accuracy = 0.1), position = "right") +
# axis settings
xlab("Date") +
ylab("") +
# set title and subtitle
ggtitle("Modelled daily rates of the percentage of the population testing positive for covid-19 in England") +
labs(caption = paste("Data from the Office for National Statistics. Plotted", Sys.time(), sep = " ", "\nData plot by Andrew Harrison / https://aharriso11.github.io/dorset_covid"),
subtitle = paste0(st1)) +
# set theme
theme_base() +
theme(
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8),
plot.title = element_text(size = 20, family = "Helvetica", face = "bold"),
plot.subtitle = element_markdown(hjust = 0, vjust = 0, size = 11),
plot.caption = element_text(size = 8),
legend.text = element_text(size = 12),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"),
axis.title = element_text(size = 12),
axis.text = element_text(size = 8),
strip.text.x = element_text(size = 12),
strip.text.y = element_text(size = 12)
)
# generate the plot
show(df_plot_eng)
# SAVE OUTPUT ----
# save to daily file
ggsave("output/ons_england_long.png", width = 16.6, height = 8.65, units = "in")
# generate the plot
show(df_plot_eng)
df_plot_eng
source("~/Documents/GitHub/dorset_covid/scripts/ons_england.R", echo=TRUE)
# set working directory
setwd("~/Documents/GitHub/dorset_covid")
# Install the pacman package to call all the other packages
if (!require("pacman")) install.packages("pacman")
# Use pacman to install (if req) and load required packages
pacman::p_load(
httr,
readxl,
readODS,
tidyverse,
zoo,
data.table,
scales,
glue,
ggtext,
ggthemes,
pals,
utils,
reshape,
lubridate
)
# set mobility reports zipfile path
zip_path <- "https://www.gstatic.com/covid19/mobility/Region_Mobility_Report_CSVs.zip"
# set downloaded file path and name for downloaded data
file_name <- "devel/Region_Mobility_Report_CSVs.zip"
# download the mobility report zipfile
GET(zip_path, write_disk(file_name, overwrite = TRUE))
# extract the GB data for 2021
unzip(file_name, files = c("2022_GB_Region_Mobility_Report.csv", "2021_GB_Region_Mobility_Report.csv", "2020_GB_Region_Mobility_Report.csv"), overwrite = TRUE, exdir = "./devel/")
# import GB data files
mobility2020 <- read.csv("devel/2020_GB_Region_Mobility_Report.csv")
mobility2021 <- read.csv("devel/2021_GB_Region_Mobility_Report.csv")
mobility2022 <- read.csv("devel/2022_GB_Region_Mobility_Report.csv")
# manually read in lockdown start and end
# data from https://www.instituteforgovernment.org.uk/charts/uk-government-coronavirus-lockdowns
# and https://commonslibrary.parliament.uk/research-briefings/cbp-9068/
# xmin denotes lockdown start, xmax denotes lockdown end
lockdowns <- data.frame(
xmin = c(as.Date(c("2020-03-23")), as.Date(c("2020-11-05")), as.Date(c("2021-01-06"))),
xmax = c(as.Date(c("2020-07-04")), as.Date(c("2020-12-02")), as.Date(c("2021-03-29"))),
ymin = c(-Inf, -Inf, -Inf),
ymax = c(Inf, Inf, Inf)
)
# merge datasets into one
# 1 - place datasets into a single list
mobility_list <- list(mobility2020, mobility2021, mobility2022)
# 2 - merge the datasets in the list into vaccs_combined
mobility_combined <- merge_recurse(mobility_list)
# define the date format
mobility_combined$date = as.Date(mobility_combined$date, "%Y-%m-%d")
# filter only the Dorset data
mobility_combined <- mobility_combined %>%
filter(sub_region_1 == "Dorset" & sub_region_2 == "")
# calculate seven day rolling average
mobility_combined <- mobility_combined %>%
mutate(ret_av = rollmean(retail_and_recreation_percent_change_from_baseline, k = 7, fill = NA)) %>%
mutate(gro_av = rollmean(grocery_and_pharmacy_percent_change_from_baseline, k = 7, fill = NA)) %>%
mutate(par_av = rollmean(parks_percent_change_from_baseline, k = 7, fill = NA)) %>%
mutate(tra_av = rollmean(transit_stations_percent_change_from_baseline, k = 7, fill = NA)) %>%
mutate(wor_av = rollmean(workplaces_percent_change_from_baseline, k = 7, fill = NA)) %>%
mutate(res_av = rollmean(residential_percent_change_from_baseline, k = 7, fill = NA))
# remove the columns we don't need
mobility_combined <- subset(mobility_combined, select = c("date", "sub_region_2", "ret_av", "gro_av", "par_av", "tra_av", "wor_av", "res_av"))
# rename the activity columns
names(mobility_combined)[names(mobility_combined) == "ret_av"] <- "Retail and recreation"
names(mobility_combined)[names(mobility_combined) == "gro_av"] <- "Grocery and pharmacy"
names(mobility_combined)[names(mobility_combined) == "par_av"] <- "Parks"
names(mobility_combined)[names(mobility_combined) == "tra_av"] <- "Public transport hubs"
names(mobility_combined)[names(mobility_combined) == "wor_av"] <- "Workplace"
names(mobility_combined)[names(mobility_combined) == "res_av"] <- "Residential"
# elongate the data
mobility_long <- gather(mobility_combined, activity, percent_change_from_baseline, "Retail and recreation":last_col(), na.rm = FALSE, convert = FALSE)
# create plot and geom
mobility_plot <- ggplot() +
# shaded areas to denote lockdowns
geom_rect(
data = lockdowns,
fill = "lightsteelblue1", alpha = 0.5,
aes(
xmin = xmin,
xmax = xmax,
ymin = ymin,
ymax = ymax
)
) +
# grey line to indicate baseline
geom_hline(yintercept = 0, colour = "black") +
# main data plot
geom_area(data = mobility_long, aes(x = date, y = percent_change_from_baseline), size = 0.75, colour = "springgreen4", fill = "#94d3b2", position = "stack") +
# text annotations to indicate lockdowns
# x value takes the start date from the lockdowns dataframe and adds twelve for positioning
annotate("text", x = lockdowns$xmin[1]+12, y = 250, label = "Lockdown 1", size = 2.5, colour = "darkblue", fontface = "bold", angle = 90) +
annotate("text", x = lockdowns$xmin[2]+12, y = 250, label = "Lockdown 2", size = 2.5, colour = "darkblue", fontface = "bold", angle = 90) +
annotate("text", x = lockdowns$xmin[3]+12, y = 250, label = "Lockdown 3", size = 2.5, colour = "darkblue", fontface = "bold", angle = 90) +
# facet by activity
facet_wrap(~ activity) +
# set scales
scale_x_date(date_labels = "%b %y", date_breaks = "3 months") +
scale_y_continuous(breaks = c(-50, 0, 50, 100, 150, 200, 250, 300)) +
# set axis labels
xlab("Date") +
ylab("Percentage change") +
# set title and subtitle
ggtitle("We're moving around in Dorset differently due to covid-19") +
labs(caption = paste("Data from Google community mobility reports / https://www.google.com/covid19/mobility. Lockdown dates from the Insitute for Government. Plotted", Sys.time(), sep = " ", "\nData plot by Andrew Harrison / https://aharriso11.github.io/dorset_covid"), subtitle = "How visits and lengths of stay at different places change compared to a pre-covid baseline (3rd Jan - 6th Feb 2020), calculated from Google account users who have opted in to location history features.<br>Shaded light blue areas indicate periods of national restrictions.") +
# set theme and customisations
theme_base() +
theme(
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8),
plot.title = element_text(size = 20, family = "Helvetica", face = "bold"),
plot.subtitle = element_markdown(hjust = 0, vjust = 0, size = 11),
plot.caption = element_text(size = 8),
legend.text = element_text(size = 12),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"),
axis.title = element_text(size = 12),
axis.text = element_text(size = 8),
strip.text.y = element_text(size = 9.5))
# run the plot
mobility_plot
