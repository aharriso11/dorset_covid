theme_bw() +
theme(axis.text.x=element_markdown(angle=60,hjust=1,size=5))
# Use pacman to install (if req) and load required packages
pacman::p_load(
readxl,
tidyr,
ggplot2,
dplyr,
zoo,
data.table,
scales,
glue,
ggtext
)
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority", labels= function(x) highlight(x, "Dorset UA|Bournemouth, Christchurch and Poole UA", "red")) +
theme_bw() +
theme(axis.text.x=element_markdown(angle=60,hjust=1,size=5))
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority", labels= function(x) highlight(x, "Dorset UA|Bournemouth, Christchurch and Poole UA", "red4")) +
theme_bw() +
theme(axis.text.x=element_markdown(angle=60,hjust=1,size=5))
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority", labels= function(x) highlight(x, "Dorset UA|Bournemouth, Christchurch and Poole UA", "red3")) +
theme_bw() +
theme(axis.text.x=element_markdown(angle=60,hjust=1,size=5))
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority", labels= function(x) highlight(x, "Dorset UA|Bournemouth, Christchurch and Poole UA", "red3")) +
scale_fill_discrete(name = "LA type", labels = c("London borough", "Metropolitan district", "County", "Unitary authority")) +
theme_bw() +
theme(axis.text.x=element_markdown(angle=60,hjust=1,size=5))
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority", labels= function(x) highlight(x, "Dorset UA|Bournemouth, Christchurch and Poole UA", "red3")) +
scale_fill_discrete(name = "LA type", labels = c("London borough", "Metropolitan district", "County council", "Unitary authority")) +
theme_bw() +
theme(axis.text.x=element_markdown(angle=60,hjust=1,size=5))
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority", labels= function(x) highlight(x, "Dorset UA|Bournemouth, Christchurch and Poole UA", "red3")) +
scale_fill_discrete(name = "LA type", labels = c("London borough", "Metropolitan district", "County council", "Unitary authority")) +
ggtitle("Local authority adult social services spend 2020-21") +
theme_bw() +
theme(axis.text.x=element_markdown(angle=60,hjust=1,size=5))
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority", labels= function(x) highlight(x, "Dorset UA|Bournemouth, Christchurch and Poole UA", "red3")) +
scale_fill_discrete(name = "LA type", labels = c("London borough", "Metropolitan district", "County council", "Unitary authority")) +
ggtitle("Local authority adult social services spend 2020-21", subtitle = "Data from https://www.gov.uk/government/collections/local-authority-revenue-expenditure-and-financing") +
theme_bw() +
theme(axis.text.x=element_markdown(angle=60,hjust=1,size=5))
socialcare_plot
# set working directory
setwd("~/Documents/GitHub/dorset_covid")
# install the UKHSA covid-19 R SDK
remotes::install_github("publichealthengland/coronavirus-dashboard-api-R-sdk")
library(ukcovid19)
# Install the pacman package to call all the other packages
if (!require("pacman")) install.packages("pacman")
# Use pacman to install (if req) and load required packages
pacman::p_load(
httr,
readxl,
readODS,
tidyverse,
zoo,
data.table,
scales,
glue,
ggtext,
ggthemes,
pals,
utils,
reshape,
lubridate,
rvest,
stringr,
openxlsx,
ggalt,
fuzzyjoin
)
# query filter for England
filter_eng <- c(
'areaType=nation',
'areaCode=E92000001'
)
# query filter for SW
filter_rsw <-c(
'areaType=nhsRegion',
'areaCode=E40000006'
)
# query filter for RBD
filter_rbd <-c(
'areaType=nhsTrust',
'areaCode=RBD'
)
# query filter for R0D
filter_r0d <-c(
'areaType=nhsTrust',
'areaCode=R0D'
)
# data structure for the API call
df_structure <- c(date = "date",
areaName = "areaName",
areaCode = "areaCode",
hospitalCases = "hospitalCases",
newAdmissions = 'newAdmissions'
)
# England
df_eng <- get_data(
filters = filter_eng,
structure = df_structure
)
View(df_eng)
# south west
df_rsw <- get_data(
filters = filter_rsw,
structure = df_structure
)
# dorset county hospital
df_rbd <- get_data(
filters = filter_rbd,
structure = df_structure
)
# university hospitals dorset
df_r0d <- get_data(
filters = filter_r0d,
structure = df_structure
)
# waves dataframe - as a tibble to allow use with fuzzy_join below
df_waves <- tibble(
start = c(as.Date(c("2020-03-01")), as.Date(c("2020-09-01")), as.Date(c("2021-05-01")), as.Date(c("2022-06-03"))),
end = c(as.Date(c("2020-08-31")), as.Date(c("2021-04-30")), as.Date(c("2022-06-02")), as.Date(today())),
Wave = c("Wave 1", "Wave 2", "Wave 3", "Wave BA.4 and BA.5")
)
View(df_waves)
# merge datasets into one
# 1 - place datasets into a single list
df_list <- list(df_eng, df_rsw, df_rbd, df_r0d)
# 2 - merge the datasets in the list into vaccs_combined
df_combined <- merge_recurse(df_list)
# define the date format
df_combined$date = as.Date(df_combined$date, "%Y-%m-%d")
# calculate averages
df_combined <- df_combined %>%
group_by(areaCode) %>%
mutate(hospitalCasesA = rollmean(hospitalCases, k = 7, fill = NA)) %>%
mutate(newAdmissionsA = rollmean(newAdmissions, k = 7, fill = NA))
# convert to tibble to permit the fuzzy join below
as_tibble(df_combined)
# use fuzzy join to lookup the date for each observation against the date ranges in df_waves
df_combined <- fuzzy_left_join(
df_combined, df_waves,
by = c(
"date" = "start",
"date" = "end"
),
match_fun = list(`>=`, `<=`)
) %>%
select(areaCode, areaType, areaName, date, hospitalCasesA, newAdmissionsA, Wave)
df_combined <- df_combined %>%
filter(!is.na(newAdmissionsA) & !is.na(hospitalCasesA))
df_latest <- df_combined %>%
group_by(areaCode) %>%
slice(which.max(date))
df_plot <- ggplot() +
# main data
geom_point(data = df_combined, aes(x = newAdmissionsA, y = hospitalCasesA, colour = Wave), shape = 1, size = 2) +
# latest data (black spot)
geom_point(data = df_latest, aes(x = newAdmissionsA, y = hospitalCasesA), colour = "black", shape = 16, size = 2) +
# faceting
facet_wrap( ~ areaName, scales = "free") +
# scale colours
scale_colour_manual(name = "Wave", values = c("Wave 1" = "red", "Wave 2" = "blue", "Wave 3" = "limegreen", "Wave BA.4 and BA.5" = "purple")) +
# axis settings
xlab("New admissions to hospital with covid-19") +
ylab("Cases of people in hospital with covid-19") +
# set title and subtitle
ggtitle("Comparing covid hospital admissions with cases in hospital") +
labs(caption = paste("Data from the UK Health Security Agency. Plotted", Sys.time(), sep = " ", "\nData plot by Andrew Harrison / https://aharriso11.github.io/dorset_covid, and inspired by @bristoliver"),
subtitle = "The daily number of new admissions to hospital of patients with covid-19, compared with the daily number of confirmed covid-19 patients in hospital.<br>
If the black dot goes up, the number of people in hospital with covid-19 is rising. If the black dot moves to the right, the number of people being admitted to hospital with covid-19 is rising.<br>
<b><span style='color:red;'>Wave 1</span></b> ran from 1st March 2020 to 31st August 2020. <b><span style='color:blue;'>Wave 2</span></b> ran from 1st September 2020 to 30th April 2021. <b><span style='color:limegreen;'>Wave 3</span></b> began on 1st May 2021 and is the current wave."
) +
# set theme and customisations
theme_base() +
theme(
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8),
plot.title = element_text(size = 20, family = "Helvetica", face = "bold"),
plot.subtitle = element_markdown(hjust = 0, vjust = 0, size = 11),
plot.caption = element_text(size = 8),
legend.title = element_text(size = 12, face = "bold"),
legend.text = element_text(size = 10),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"),
axis.title = element_text(size = 12),
axis.text = element_text(size = 8),
strip.text.y = element_text(size = 9.5),
strip.text.x = element_text(size = 9.5, face = "bold"))
# run plot
df_plot
View(df_combined)
df_combined[order(df_combined$date),]
df_combines <- df_combined[order(df_combined$date),]
rm(df_combines)
df_combined <- df_combined[order(df_combined$date),]
View(df_combined)
df_plot <- ggplot() +
# main data
geom_point(data = df_combined, aes(x = newAdmissionsA, y = hospitalCasesA, colour = Wave), shape = 1, size = 2) +
# latest data (black spot)
geom_point(data = df_latest, aes(x = newAdmissionsA, y = hospitalCasesA), colour = "black", shape = 16, size = 2) +
# faceting
facet_wrap( ~ areaName, scales = "free") +
# scale colours
scale_colour_manual(name = "Wave", values = c("Wave 1" = "red", "Wave 2" = "blue", "Wave 3" = "limegreen", "Wave BA.4 and BA.5" = "purple")) +
# axis settings
xlab("New admissions to hospital with covid-19") +
ylab("Cases of people in hospital with covid-19") +
# set title and subtitle
ggtitle("Comparing covid hospital admissions with cases in hospital") +
labs(caption = paste("Data from the UK Health Security Agency. Plotted", Sys.time(), sep = " ", "\nData plot by Andrew Harrison / https://aharriso11.github.io/dorset_covid, and inspired by @bristoliver"),
subtitle = "The daily number of new admissions to hospital of patients with covid-19, compared with the daily number of confirmed covid-19 patients in hospital.<br>
If the black dot goes up, the number of people in hospital with covid-19 is rising. If the black dot moves to the right, the number of people being admitted to hospital with covid-19 is rising.<br>
<b><span style='color:red;'>Wave 1</span></b> ran from 1st March 2020 to 31st August 2020. <b><span style='color:blue;'>Wave 2</span></b> ran from 1st September 2020 to 30th April 2021. <b><span style='color:limegreen;'>Wave 3</span></b> began on 1st May 2021 and is the current wave."
) +
# set theme and customisations
theme_base() +
theme(
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8),
plot.title = element_text(size = 20, family = "Helvetica", face = "bold"),
plot.subtitle = element_markdown(hjust = 0, vjust = 0, size = 11),
plot.caption = element_text(size = 8),
legend.title = element_text(size = 12, face = "bold"),
legend.text = element_text(size = 10),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"),
axis.title = element_text(size = 12),
axis.text = element_text(size = 8),
strip.text.y = element_text(size = 9.5),
strip.text.x = element_text(size = 9.5, face = "bold"))
# run plot
df_plot
df_plot <- ggplot() +
# main data
geom_point(data = df_combined, aes(x = newAdmissionsA, y = hospitalCasesA, colour = Wave), shape = 1, size = 2) +
# latest data (black spot)
geom_point(data = df_latest, aes(x = newAdmissionsA, y = hospitalCasesA), colour = "black", shape = 16, size = 2) +
# faceting
facet_wrap( ~ areaName, scales = "free") +
# scale colours
scale_colour_manual(name = "Wave", values = c("Wave 1" = "red", "Wave 2" = "blue", "Wave 3" = "limegreen", "Wave BA.4 and BA.5" = "purple")) +
# axis settings
xlab("New admissions to hospital with covid-19") +
ylab("Cases of people in hospital with covid-19") +
# set title and subtitle
ggtitle("Comparing covid hospital admissions with cases in hospital") +
labs(caption = paste("Data from the UK Health Security Agency. Plotted", Sys.time(), sep = " ", "\nData plot by Andrew Harrison / https://aharriso11.github.io/dorset_covid, and inspired by @bristoliver"),
subtitle = "The daily number of new admissions to hospital of patients with covid-19, compared with the daily number of confirmed covid-19 patients in hospital.<br>
If the black dot goes up, the number of people in hospital with covid-19 is rising. If the black dot moves to the right, the number of people being admitted to hospital with covid-19 is rising.<br>
<b><span style='color:red;'>Wave 1</span></b> ran from 1st March 2020 to 31st August 2020. <b><span style='color:blue;'>Wave 2</span></b> ran from 1st September 2020 to 30th April 2021. <b><span style='color:limegreen;'>Wave 3</span></b>ran from May 2021 to June 2022.<br>
<b><span style='color:purple;'>The current wave</span></b> began on 3rd June 2022 and covers Omicron variant BA.4 and BA.5"
) +
# set theme and customisations
theme_base() +
theme(
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8),
plot.title = element_text(size = 20, family = "Helvetica", face = "bold"),
plot.subtitle = element_markdown(hjust = 0, vjust = 0, size = 11),
plot.caption = element_text(size = 8),
legend.title = element_text(size = 12, face = "bold"),
legend.text = element_text(size = 10),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"),
axis.title = element_text(size = 12),
axis.text = element_text(size = 8),
strip.text.y = element_text(size = 9.5),
strip.text.x = element_text(size = 9.5, face = "bold"))
# run plot
df_plot
df_plot <- ggplot() +
# main data
geom_point(data = df_combined, aes(x = newAdmissionsA, y = hospitalCasesA, colour = Wave), shape = 1, size = 2) +
# latest data (black spot)
geom_point(data = df_latest, aes(x = newAdmissionsA, y = hospitalCasesA), colour = "black", shape = 16, size = 2) +
# faceting
facet_wrap( ~ areaName, scales = "free") +
# scale colours
scale_colour_manual(name = "Wave", values = c("Wave 1" = "red", "Wave 2" = "blue", "Wave 3" = "limegreen", "Wave BA.4 and BA.5" = "purple")) +
# axis settings
xlab("New admissions to hospital with covid-19") +
ylab("Cases of people in hospital with covid-19") +
# set title and subtitle
ggtitle("Comparing covid hospital admissions with cases in hospital") +
labs(caption = paste("Data from the UK Health Security Agency. Plotted", Sys.time(), sep = " ", "\nData plot by Andrew Harrison / https://aharriso11.github.io/dorset_covid, and inspired by @bristoliver"),
subtitle = "The daily number of new admissions to hospital of patients with covid-19, compared with the daily number of confirmed covid-19 patients in hospital.<br>
If the black dot goes up, the number of people in hospital with covid-19 is rising. If the black dot moves to the right, the number of people being admitted to hospital with covid-19 is rising.<br>
<b><span style='color:red;'>Wave 1</span></b> ran from 1st March 2020 to 31st August 2020. <b><span style='color:blue;'>Wave 2</span></b> ran from 1st September 2020 to 30th April 2021. <b><span style='color:limegreen;'>Wave 3</span></b>ran from May 2021 to June 2022.<br>
<b><span style='color:purple;'>The current wave</span></b> began on 3rd June 2022 and covers Omicron sub-variants BA.4 and BA.5"
) +
# set theme and customisations
theme_base() +
theme(
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8),
plot.title = element_text(size = 20, family = "Helvetica", face = "bold"),
plot.subtitle = element_markdown(hjust = 0, vjust = 0, size = 11),
plot.caption = element_text(size = 8),
legend.title = element_text(size = 12, face = "bold"),
legend.text = element_text(size = 10),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"),
axis.title = element_text(size = 12),
axis.text = element_text(size = 8),
strip.text.y = element_text(size = 9.5),
strip.text.x = element_text(size = 9.5, face = "bold"))
# run plot
df_plot
df_plot <- ggplot() +
# main data
geom_point(data = df_combined, aes(x = newAdmissionsA, y = hospitalCasesA, colour = Wave), shape = 1, size = 2) +
# latest data (black spot)
geom_point(data = df_latest, aes(x = newAdmissionsA, y = hospitalCasesA), colour = "black", shape = 16, size = 2) +
# faceting
facet_wrap( ~ areaName, scales = "free") +
# scale colours
scale_colour_manual(name = "Wave", values = c("Wave 1" = "red", "Wave 2" = "blue", "Wave 3" = "limegreen", "Wave BA.4 and BA.5" = "purple")) +
# axis settings
xlab("New admissions to hospital with covid-19") +
ylab("Cases of people in hospital with covid-19") +
# set title and subtitle
ggtitle("Comparing covid hospital admissions with cases in hospital") +
labs(caption = paste("Data from the UK Health Security Agency. Plotted", Sys.time(), sep = " ", "\nData plot by Andrew Harrison / https://aharriso11.github.io/dorset_covid, and inspired by @bristoliver"),
subtitle = "The daily number of new admissions to hospital of patients with covid-19, compared with the daily number of confirmed covid-19 patients in hospital.<br>
If the black dot goes up, the number of people in hospital with covid-19 is rising. If the black dot moves to the right, the number of people being admitted to hospital with covid-19 is rising.<br>
<b><span style='color:red;'>Wave 1</span></b> ran from 1st March 2020 to 31st August 2020. <b><span style='color:blue;'>Wave 2</span></b> ran from 1st September 2020 to 30th April 2021. <b><span style='color:limegreen;'>Wave 3</span></b>ran from May 2021 to June 2022.<br>
<b><span style='color:purple;'>The current wave</span></b> began on 3rd June 2022 and covers Omicron sub-variants BA.4 and BA.5. Please note the different scales of each graph."
) +
# set theme and customisations
theme_base() +
theme(
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8),
plot.title = element_text(size = 20, family = "Helvetica", face = "bold"),
plot.subtitle = element_markdown(hjust = 0, vjust = 0, size = 11),
plot.caption = element_text(size = 8),
legend.title = element_text(size = 12, face = "bold"),
legend.text = element_text(size = 10),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"),
axis.title = element_text(size = 12),
axis.text = element_text(size = 8),
strip.text.y = element_text(size = 9.5),
strip.text.x = element_text(size = 9.5, face = "bold"))
# run plot
df_plot
# set working directory
setwd("~/Documents/GitHub/dorset_covid")
# set technical briefing spreadsheet path
sheet_path <- "https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/1093222/variants-of-concern-technical-briefing-44-data-england-22-july-2022.ods"
# set plot title
plot_subtitle <- "Variant prevalence for all England available sequenced cases from 1 February 2021 as of 18 July 2022"
# set plot caption
plot_caption <- "Data from UK Health Security Agency technical briefing 44 (gateway number GOV-12795)."
# set file name
file_name <- "devel/techreport44.ods"
# Install the pacman package to call all the other packages
if (!require("pacman")) install.packages("pacman")
# Use pacman to install (if req) and load required packages
pacman::p_load(
httr,
readxl,
readODS,
tidyr,
ggplot2,
dplyr,
zoo,
data.table,
scales,
glue,
ggtext,
ggthemes,
pals
)
GET(sheet_path, write_disk(file_name, overwrite = TRUE))
# Import raw data from Excel
covid_variant_data <- read_ods(file_name, sheet = "Fig4", skip = 2)
View(covid_variant_data)
# set the date format
covid_variant_data$week = as.Date(covid_variant_data$week, "%d/%m/%Y")
# convert wide data to long
covid_variant_data <- gather(covid_variant_data, variant, case_prevelance, -c(week))
# Use pacman to install (if req) and load required packages
pacman::p_load(
httr,
readxl,
readODS,
tidyr,
ggplot2,
dplyr,
zoo,
data.table,
scales,
glue,
ggtext,
ggthemes,
pals,
viridis
)
# create plot and geom
covid_variant_plot <- ggplot() +
# plot data in a stacked format
geom_area(data = covid_variant_data, aes(x = week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
# scale settings
scale_fill_manual(name = "Variant", values = as.vector(viridis(23))) +
scale_x_date(date_labels = "%b %y", date_breaks = "1 month") +
# axis settings
xlab("Month") +
ylab("Case prevelance percentage") +
# titles
ggtitle("Covid variant prevalence in England") +
labs(caption = paste0(plot_caption," Plotted", Sys.time(), sep = " "), subtitle = paste0(plot_subtitle)) +
# set theme
theme_base() +
theme(
plot.title = element_text(size = 20, family = "Helvetica", face = "bold"),
plot.subtitle = element_markdown(hjust = 0, vjust = 0, size = 11),
plot.caption = element_text(size = 10))
covid_variant_plot
# create plot and geom
covid_variant_plot <- ggplot() +
# plot data in a stacked format
geom_area(data = covid_variant_data, aes(x = week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
# scale settings
scale_fill_manual(name = "Variant", values = as.vector(inferno(23))) +
scale_x_date(date_labels = "%b %y", date_breaks = "1 month") +
# axis settings
xlab("Month") +
ylab("Case prevelance percentage") +
# titles
ggtitle("Covid variant prevalence in England") +
labs(caption = paste0(plot_caption," Plotted", Sys.time(), sep = " "), subtitle = paste0(plot_subtitle)) +
# set theme
theme_base() +
theme(
plot.title = element_text(size = 20, family = "Helvetica", face = "bold"),
plot.subtitle = element_markdown(hjust = 0, vjust = 0, size = 11),
plot.caption = element_text(size = 10))
covid_variant_plot
# create plot and geom
covid_variant_plot <- ggplot() +
# plot data in a stacked format
geom_area(data = covid_variant_data, aes(x = week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
# scale settings
scale_fill_manual(name = "Variant", values = as.vector(inferno(23))) +
scale_x_date(date_labels = "%b %y", date_breaks = "2 months") +
# axis settings
xlab("Month") +
ylab("Case prevelance percentage") +
# titles
ggtitle("Covid variant prevalence in England") +
labs(caption = paste0(plot_caption," Plotted", Sys.time(), sep = " "), subtitle = paste0(plot_subtitle)) +
# set theme
theme_base() +
theme(
plot.title = element_text(size = 20, family = "Helvetica", face = "bold"),
plot.subtitle = element_markdown(hjust = 0, vjust = 0, size = 11),
plot.caption = element_text(size = 10))
covid_variant_plot
# create plot and geom
covid_variant_plot <- ggplot() +
# plot data in a stacked format
geom_area(data = covid_variant_data, aes(x = week, y = case_prevelance, group = variant, fill = variant), position = "stack") +
# scale settings
scale_fill_manual(name = "Variant", values = as.vector(inferno(23))) +
scale_x_date(date_labels = "%b %y", date_breaks = "2 months") +
scale_y_continuous(labels = scales::percent) +
# axis settings
xlab("Month") +
ylab("Case prevelance percentage") +
# titles
ggtitle("Covid variant prevalence in England") +
labs(caption = paste0(plot_caption," Plotted", Sys.time(), sep = " "), subtitle = paste0(plot_subtitle)) +
# set theme
theme_base() +
theme(
plot.title = element_text(size = 20, family = "Helvetica", face = "bold"),
plot.subtitle = element_markdown(hjust = 0, vjust = 0, size = 11),
plot.caption = element_text(size = 10))
covid_variant_plot
# save to daily file
ggsave("output/england_variants.png", width = 16.6, height = 8.65, units = "in")
