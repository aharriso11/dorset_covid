filter(la_name=="LONDON BOROUGHS") %>%
filter(la_name=="METROPOLITAN DISTRICTS") %>%
filter(la_name=="UNITARY AUTHORITIES") %>%
filter(la_name=="SHIRE COUNTIES")
la_rev_data_socialcare <- subset(la_rev_data_raw, select = c("...3", "...4", "...5", "330", "360"))
names(la_rev_data_socialcare)[names(la_rev_data_socialcare) == "...3"] <- "la_name"
names(la_rev_data_socialcare)[names(la_rev_data_socialcare) == "...4"] <- "la_mys"
names(la_rev_data_socialcare)[names(la_rev_data_socialcare) == "...5"] <- "la_type"
names(la_rev_data_socialcare)[names(la_rev_data_socialcare) == "330"] <- "children"
names(la_rev_data_socialcare)[names(la_rev_data_socialcare) == "360"] <- "adult"
la_rev_data_socialcare <- la_rev_data_socialcare %>%
filter(la_type=="L" | la_type=="MD" | la_type=="SC" | la_type=="UA") %>%
filter(la_name!="LONDON BOROUGHS") %>%
filter(la_name!="METROPOLITAN DISTRICTS") %>%
filter(la_name!="UNITARY AUTHORITIES") %>%
filter(la_name!="SHIRE COUNTIES")
la_rev_data_socialcare <- subset(la_rev_data_raw, select = c("...3", "...5", "330", "360"))
names(la_rev_data_socialcare)[names(la_rev_data_socialcare) == "...3"] <- "la_name"
names(la_rev_data_socialcare)[names(la_rev_data_socialcare) == "...5"] <- "la_type"
names(la_rev_data_socialcare)[names(la_rev_data_socialcare) == "330"] <- "children"
names(la_rev_data_socialcare)[names(la_rev_data_socialcare) == "360"] <- "adult"
la_rev_data_socialcare <- la_rev_data_socialcare %>%
filter(la_type=="L" | la_type=="MD" | la_type=="SC" | la_type=="UA") %>%
filter(la_name!="LONDON BOROUGHS") %>%
filter(la_name!="METROPOLITAN DISTRICTS") %>%
filter(la_name!="UNITARY AUTHORITIES") %>%
filter(la_name!="SHIRE COUNTIES")
la_rev_data_socialcare_long <- gather(la_rev_data_socialcare, spend_type, total, children, adult)
View(la_rev_data_socialcare_long)
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare_long, aes(x = la_name, y = total, fill = la_type), stat = "identity") +
facet_grid( ~ spend_type) +
theme_bw()
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare_long, aes(x = reorder(la_name, value), y = total, fill = la_type), stat = "identity") +
facet_grid( ~ spend_type) +
theme_bw()
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare_long, aes(x = reorder(la_name, total), y = total, fill = la_type), stat = "identity") +
facet_grid( ~ spend_type) +
theme_bw()
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare_long, aes(x = la_name, y = total, fill = la_type), stat = "identity") +
facet_grid( ~ spend_type) +
theme_bw()
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare_long, aes(x = reorder(la_name, total), y = total, fill = la_type), stat = "identity") +
facet_grid( ~ spend_type) +
theme_bw()
socialcare_plot
warnings()
head(la_rev_data_socialcare_long)
class(la_rev_data_socialcare_long$total)
la_rev_data_socialcare_long$total <- as.numeric(as.character(la_rev_data_socialcare_long$total))
class(la_rev_data_socialcare_long$total)
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare_long, aes(x = reorder(la_name, total), y = total, fill = la_type), stat = "identity") +
facet_grid( ~ spend_type) +
theme_bw()
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare_long, aes(x = reorder(la_name, total), y = total, fill = la_type), stat = "identity") +
scale_y_continuous(breaks = c(100000, 200000, 300000, 400000, 500000)) +
facet_grid( ~ spend_type) +
theme_bw()
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare_long, aes(x = reorder(la_name, total), y = total, fill = la_type), stat = "identity") +
scale_y_continuous(breaks = c(100000, 200000, 300000, 400000, 500000), labels = scales::dollar()) +
facet_grid( ~ spend_type) +
theme_bw()
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare_long, aes(x = reorder(la_name, total), y = total, fill = la_type), stat = "identity") +
scale_y_continuous(breaks = c(100000, 200000, 300000, 400000, 500000), labels = comma) +
facet_grid( ~ spend_type) +
theme_bw()
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare_long, aes(x = reorder(la_name, total), y = total, fill = la_type), stat = "identity") +
scale_y_continuous(breaks = c(100000, 200000, 300000, 400000, 500000), labels = scales::comma()) +
facet_grid( ~ spend_type) +
theme_bw()
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare_long, aes(x = reorder(la_name, total), y = total, fill = la_type), stat = "identity") +
options(scipen = 999) +
facet_grid( ~ spend_type) +
theme_bw()
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare_long, aes(x = reorder(la_name, total), y = total, fill = la_type), stat = "identity") +
options(scipen = 999) +
facet_grid( ~ spend_type) +
theme_bw()
rlang::last_error()
rlang::last_trace()
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare_long, aes(x = reorder(la_name, total), y = total, fill = la_type), stat = "identity") +
#  options(scipen = 999) +
facet_grid( ~ spend_type) +
theme_bw()
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare_long, aes(x = reorder(la_name, total), y = total, fill = la_type), stat = "identity") +
options(scipen = 999) +
facet_grid( ~ spend_type) +
theme_bw()
# Use pacman to install (if req) and load required packages
pacman::p_load(
readxl,
tidyr,
ggplot2,
dplyr,
zoo,
data.table,
scales
)
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare_long, aes(x = reorder(la_name, total), y = total, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend", labels = comma) +
facet_grid( ~ spend_type) +
theme_bw()
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare_long, aes(x = reorder(la_name, total), y = total, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
facet_grid( ~ spend_type) +
theme_bw()
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
#  facet_grid( ~ spend_type) +
theme_bw()
socialcare_plot
la_rev_data_socialcare$adult <- as.numeric(as.character(la_rev_data_socialcare$adult))
la_rev_data_socialcare$children <- as.numeric(as.character(la_rev_data_socialcare$children))
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
#  facet_grid( ~ spend_type) +
theme_bw()
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_x_continuous(name = "Local authority") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
#  facet_grid( ~ spend_type) +
theme_bw()
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
#  facet_grid( ~ spend_type) +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
theme_bw()
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
#  facet_grid( ~ spend_type) +
theme(axis.text.x=element_text(angle=90,hjust=1)) +
theme_bw()
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority")
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority") +
#  facet_grid( ~ spend_type) +
theme(axis.text.x=element_text(angle=90,hjust=1)) +
theme_bw()
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority") +
#  facet_grid( ~ spend_type) +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
theme_bw()
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority") +
#  facet_grid( ~ spend_type) +
theme_bw() +
theme(axis.text.x=element_text(angle=45,hjust=1))
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority") +
#  facet_grid( ~ spend_type) +
theme_bw() +
theme(axis.text.x=element_text(angle=45,hjust=1,size = 2))
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority") +
#  facet_grid( ~ spend_type) +
theme_bw() +
theme(axis.text.x=element_text(angle=45,hjust=1,size = 3))
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority") +
#  facet_grid( ~ spend_type) +
theme_bw() +
theme(axis.text.x=element_text(angle=45,hjust=1,size = 4))
socialcare_plot
theme(axis.text.x=element_text(angle=45,hjust=1,size = 5)
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority") +
#  facet_grid( ~ spend_type) +
theme_bw() +
theme(axis.text.x=element_text(angle=45,hjust=1,size=4))
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority") +
#  facet_grid( ~ spend_type) +
theme_bw() +
theme(axis.text.x=element_text(angle=45,hjust=1,size=5))
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority") +
#  facet_grid( ~ spend_type) +
theme_bw() +
theme(axis.text.x=element_text(angle=90,hjust=1,size=5))
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority") +
#  facet_grid( ~ spend_type) +
theme_bw() +
theme(axis.text.x=element_text(angle=60,hjust=1,size=5))
socialcare_plot
highlight = function(x, pat, color="black", family="") {
ifelse(grepl(pat, x), glue("<b style='font-family:{family}; color:{color}'>{x}</b>"), x)
}
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority", labels= function(x) highlight(x, "Dorset UA|Bournemouth, Christchurch and Poole UA", "red")) +
theme_bw() +
theme(axis.text.x=element_text(angle=60,hjust=1,size=5))
socialcare_plot
# Use pacman to install (if req) and load required packages
pacman::p_load(
readxl,
tidyr,
ggplot2,
dplyr,
zoo,
data.table,
scales,
glue
)
highlight = function(x, pat, color="black", family="") {
ifelse(grepl(pat, x), glue("<b style='font-family:{family}; color:{color}'>{x}</b>"), x)
}
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority", labels= function(x) highlight(x, "Dorset UA|Bournemouth, Christchurch and Poole UA", "red")) +
theme_bw() +
theme(axis.text.x=element_text(angle=60,hjust=1,size=5))
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority", labels= function(x) highlight(x, "Dorset UA|Bournemouth, Christchurch and Poole UA", "red")) +
theme_bw() +
theme(axis.text.x=element_html(angle=60,hjust=1,size=5))
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority", labels= function(x) highlight(x, "Dorset UA|Bournemouth, Christchurch and Poole UA", "red")) +
theme_bw() +
theme(axis.text.x=element_markdown(angle=60,hjust=1,size=5))
# Use pacman to install (if req) and load required packages
pacman::p_load(
readxl,
tidyr,
ggplot2,
dplyr,
zoo,
data.table,
scales,
glue,
ggtext
)
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority", labels= function(x) highlight(x, "Dorset UA|Bournemouth, Christchurch and Poole UA", "red")) +
theme_bw() +
theme(axis.text.x=element_markdown(angle=60,hjust=1,size=5))
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority", labels= function(x) highlight(x, "Dorset UA|Bournemouth, Christchurch and Poole UA", "red4")) +
theme_bw() +
theme(axis.text.x=element_markdown(angle=60,hjust=1,size=5))
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority", labels= function(x) highlight(x, "Dorset UA|Bournemouth, Christchurch and Poole UA", "red3")) +
theme_bw() +
theme(axis.text.x=element_markdown(angle=60,hjust=1,size=5))
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority", labels= function(x) highlight(x, "Dorset UA|Bournemouth, Christchurch and Poole UA", "red3")) +
scale_fill_discrete(name = "LA type", labels = c("London borough", "Metropolitan district", "County", "Unitary authority")) +
theme_bw() +
theme(axis.text.x=element_markdown(angle=60,hjust=1,size=5))
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority", labels= function(x) highlight(x, "Dorset UA|Bournemouth, Christchurch and Poole UA", "red3")) +
scale_fill_discrete(name = "LA type", labels = c("London borough", "Metropolitan district", "County council", "Unitary authority")) +
theme_bw() +
theme(axis.text.x=element_markdown(angle=60,hjust=1,size=5))
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority", labels= function(x) highlight(x, "Dorset UA|Bournemouth, Christchurch and Poole UA", "red3")) +
scale_fill_discrete(name = "LA type", labels = c("London borough", "Metropolitan district", "County council", "Unitary authority")) +
ggtitle("Local authority adult social services spend 2020-21") +
theme_bw() +
theme(axis.text.x=element_markdown(angle=60,hjust=1,size=5))
socialcare_plot
socialcare_plot <- ggplot() +
geom_bar(data = la_rev_data_socialcare, aes(x = reorder(la_name, adult), y = adult, fill = la_type), stat = "identity") +
scale_y_continuous(name = "Spend £thousand", labels = comma) +
scale_x_discrete(name = "Local authority", labels= function(x) highlight(x, "Dorset UA|Bournemouth, Christchurch and Poole UA", "red3")) +
scale_fill_discrete(name = "LA type", labels = c("London borough", "Metropolitan district", "County council", "Unitary authority")) +
ggtitle("Local authority adult social services spend 2020-21", subtitle = "Data from https://www.gov.uk/government/collections/local-authority-revenue-expenditure-and-financing") +
theme_bw() +
theme(axis.text.x=element_markdown(angle=60,hjust=1,size=5))
socialcare_plot
# set working directory
setwd("~/Documents/GitHub/dorset_covid")
# Install the pacman package to call all the other packages
if (!require("pacman")) install.packages("pacman")
# Use pacman to install (if req) and load required packages
pacman::p_load(
ggplot2,
dplyr,
zoo,
reshape2,
plotly,
webshot
)
covid_cases_msoa_dor <- read.csv(url("https://api.coronavirus.data.gov.uk/v2/data?areaType=msoa&areaCode=E06000059&metric=newCasesBySpecimenDateRollingRate&format=csv"))
covid_cases_msoa_bcp <- read.csv(url("https://api.coronavirus.data.gov.uk/v2/data?areaType=msoa&areaCode=E06000058&metric=newCasesBySpecimenDateRollingRate&format=csv"))
#combine datasets at this point
covid_cases_msoa_combined <- rbind(covid_cases_msoa_bcp, covid_cases_msoa_dor)
# remove data we don't want
covid_cases_msoa_combined <- subset(covid_cases_msoa_combined, date > "2021-07-01", select = c("UtlaName", "areaName", "date", "newCasesBySpecimenDateRollingRate"))
# define the date format
covid_cases_msoa_combined$date = as.Date(covid_cases_msoa_combined$date, "%Y-%m-%d")
# create plot and geom
covid_cases_msoa_plot <- ggplot() +
geom_smooth(data = covid_cases_msoa_combined, aes(x = date, y = newCasesBySpecimenDateRollingRate, col = areaName), size = 0.5) +
geom_point(data = covid_cases_msoa_combined, aes(x = date, y = newCasesBySpecimenDateRollingRate, col = areaName, text = paste("MSOA:", areaName, "<br>Rate:", newCasesBySpecimenDateRollingRate, "<br>Date:", date)), size = 1) +
xlab("Date") +
ylab("New cases by specimen date rolling rate") +
labs(color = "MSOAs") +
ggtitle("Dorset MSOAs - weekly covid rolling rate", subtitle = paste("Data from Public Health England / https://coronavirus.data.gov.uk. Plotted", Sys.time(), sep = " "))
# create dynamic plot
covid_cases_msoa_plot
covid_cases_msoa_dynamic_plot <- ggplotly(covid_cases_msoa_plot, tooltip = c("text"))
covid_cases_msoa_dynamic_plot
# save to daily file
orca(covid_cases_msoa_dynamic_plot, file = "dorset_msoa_cases.png")
htmlwidgets::saveWidget(as_widget(covid_cases_msoa_dynamic_plot), "msoa_cases.html")
# create plot and geom
covid_cases_msoa_plot <- ggplot() +
geom_line(data = covid_cases_msoa_combined, aes(x = date, y = newCasesBySpecimenDateRollingRate, col = areaName), size = 0.5) +
geom_point(data = covid_cases_msoa_combined, aes(x = date, y = newCasesBySpecimenDateRollingRate, col = areaName, text = paste("MSOA:", areaName, "<br>Rate:", newCasesBySpecimenDateRollingRate, "<br>Date:", date)), size = 1) +
xlab("Date") +
ylab("New cases by specimen date rolling rate") +
labs(color = "MSOAs") +
ggtitle("Dorset MSOAs - weekly covid rolling rate", subtitle = paste("Data from Public Health England / https://coronavirus.data.gov.uk. Plotted", Sys.time(), sep = " "))
# create dynamic plot
covid_cases_msoa_plot
covid_cases_msoa_dynamic_plot <- ggplotly(covid_cases_msoa_plot, tooltip = c("text"))
covid_cases_msoa_dynamic_plot
#combine datasets at this point
covid_cases_msoa_combined <- rbind(covid_cases_msoa_bcp, covid_cases_msoa_dor)
# remove data we don't want
covid_cases_msoa_combined <- subset(covid_cases_msoa_combined, date > "2021-09-01", select = c("UtlaName", "areaName", "date", "newCasesBySpecimenDateRollingRate"))
# define the date format
covid_cases_msoa_combined$date = as.Date(covid_cases_msoa_combined$date, "%Y-%m-%d")
# create plot and geom
covid_cases_msoa_plot <- ggplot() +
geom_line(data = covid_cases_msoa_combined, aes(x = date, y = newCasesBySpecimenDateRollingRate, col = areaName), size = 0.5) +
geom_point(data = covid_cases_msoa_combined, aes(x = date, y = newCasesBySpecimenDateRollingRate, col = areaName, text = paste("MSOA:", areaName, "<br>Rate:", newCasesBySpecimenDateRollingRate, "<br>Date:", date)), size = 1) +
xlab("Date") +
ylab("New cases by specimen date rolling rate") +
labs(color = "MSOAs") +
ggtitle("Dorset MSOAs - weekly covid rolling rate", subtitle = paste("Data from Public Health England / https://coronavirus.data.gov.uk. Plotted", Sys.time(), sep = " "))
# create dynamic plot
covid_cases_msoa_plot
covid_cases_msoa_dynamic_plot <- ggplotly(covid_cases_msoa_plot, tooltip = c("text"))
covid_cases_msoa_dynamic_plot
# create plot and geom
covid_cases_msoa_plot <- ggplot() +
geom_smooth(data = covid_cases_msoa_combined, aes(x = date, y = newCasesBySpecimenDateRollingRate, col = areaName), size = 0.5) +
geom_point(data = covid_cases_msoa_combined, aes(x = date, y = newCasesBySpecimenDateRollingRate, col = areaName, text = paste("MSOA:", areaName, "<br>Rate:", newCasesBySpecimenDateRollingRate, "<br>Date:", date)), size = 1) +
xlab("Date") +
ylab("New cases by specimen date rolling rate") +
labs(color = "MSOAs") +
ggtitle("Dorset MSOAs - weekly covid rolling rate", subtitle = paste("Data from Public Health England / https://coronavirus.data.gov.uk. Plotted", Sys.time(), sep = " "))
# create dynamic plot
covid_cases_msoa_plot
covid_cases_msoa_dynamic_plot <- ggplotly(covid_cases_msoa_plot, tooltip = c("text"))
covid_cases_msoa_dynamic_plot
# save to daily file
orca(covid_cases_msoa_dynamic_plot, file = "dorset_msoa_cases.png")
htmlwidgets::saveWidget(as_widget(covid_cases_msoa_dynamic_plot), "msoa_cases.html")
# Install the pacman package to call all the other packages
if (!require("pacman")) install.packages("pacman")
# Use pacman to install (if req) and load required packages
pacman::p_load(
readxl,
tidyr,
ggplot2,
dplyr,
zoo,
data.table,
scales,
glue,
ggtext
)
excel_path <- "https://www.insee.fr/fr/statistiques/fichier/3698339/base-pop-historiques-1876-2018.xlsx"
# Import raw data from Excel
pop_data_raw <- read_excel(excel_path, sheet = "pop_1876_2018", skip = 5)
# Install the pacman package to call all the other packages
if (!require("pacman")) install.packages("pacman")
# Use pacman to install (if req) and load required packages
pacman::p_load(
openxlsx,
readxl,
tidyr,
ggplot2,
dplyr,
zoo,
data.table,
scales,
glue,
ggtext
)
excel_path <- "https://www.insee.fr/fr/statistiques/fichier/3698339/base-pop-historiques-1876-2018.xlsx"
# Import raw data from Excel
pop_data_raw <- read_xlsx(excel_path, sheet = "pop_1876_2018", skip = 5)
# Import raw data from Excel
pop_data_raw = read_xlsx(excel_path, sheet = "pop_1876_2018", skip = 5)
# Import raw data from Excel
pop_data_raw <- read.xlsx(excel_path, sheet = "pop_1876_2018", skip = 5)
# Use pacman to install (if req) and load required packages
pacman::p_load(
httr,
readxl,
tidyr,
ggplot2,
dplyr,
zoo,
data.table,
scales,
glue,
ggtext
)
# Install the pacman package to call all the other packages
if (!require("pacman")) install.packages("pacman")
# Use pacman to install (if req) and load required packages
pacman::p_load(
httr,
readxl,
tidyr,
ggplot2,
dplyr,
zoo,
data.table,
scales,
glue,
ggtext
)
GET(excel_path, write_disk("base-pop-historiques-1876-2018.xlsx", overwrite = TRUE))
# Import raw data from Excel
pop_data_raw <- read_excel("base-pop-historiques-1876-2018.xlsx", sheet = "pop_1876_2018", skip = 5)
View(pop_data_raw)
